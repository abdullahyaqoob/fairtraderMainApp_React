{"ast":null,"code":"import _regeneratorRuntime from \"/home/abdullah/Desktop/Fairtrader/Fairtrader_MainApp_Frontend/fairTraderMainApplication (react)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/abdullah/Desktop/Fairtrader/Fairtrader_MainApp_Frontend/fairTraderMainApplication (react)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/abdullah/Desktop/Fairtrader/Fairtrader_MainApp_Frontend/fairTraderMainApplication (react)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/abdullah/Desktop/Fairtrader/Fairtrader_MainApp_Frontend/fairTraderMainApplication (react)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/abdullah/Desktop/Fairtrader/Fairtrader_MainApp_Frontend/fairTraderMainApplication (react)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/abdullah/Desktop/Fairtrader/Fairtrader_MainApp_Frontend/fairTraderMainApplication (react)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/abdullah/Desktop/Fairtrader/Fairtrader_MainApp_Frontend/fairTraderMainApplication (react)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/abdullah/Desktop/Fairtrader/Fairtrader_MainApp_Frontend/fairTraderMainApplication (react)/src/components/HeaderNav.jsx\";\n// react States\nimport { useEffect, useState } from 'react';\nimport React, { Component } from 'react';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { useNavigate } from \"react-router-dom\";\nimport Token from \"../ABIS_CutFeeGiveOrdrId/FTPToken.json\";\nimport EthSwap from \"../ABIS_CutFeeGiveOrdrId/EthSwap.json\";\nimport Web3 from 'web3';\nimport toggleBtn from '../Images/exchangeIcons/toggleBtn.png';\nimport networkImg from '../Images/exchangeIcons/networkImg.png';\nimport connectImg from '../Images/exchangeIcons/connectImg.png';\nimport networkDropdown1 from '../Images/exchangeIcons/networkDropdown1.png';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'; // components\n// import './css/graph.css'\n\nimport './css/exchangeCss/graph.css'; // css\n// import './css/swapPage.css'\n\nimport axios from 'axios';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      output: '0',\n      outputT: '0',\n      outputInUSD: '0',\n      CurrentUserNetwork: '',\n      userAccount: '',\n      UserEthBalance: '',\n      FormatedUserEthBalance: '0',\n      SelectSwapToken: '',\n      token: '',\n      ethSwap: '',\n      tokenBalance: '0',\n      loading: false,\n      tokenFarm: '',\n      contractGetAmount: '',\n      transactionHash: '',\n      receiptDiv1: false,\n      receiptDiv2: false,\n      currentNetworkId: '',\n      livePriceBftp: '',\n      livePriceBftpBNB: '',\n      lPriceinCryptoBNB: '',\n      lPriceinCryptoBftp: '',\n      etherAmount: '',\n      livePriceOfBNBInUSD: '',\n      livePriceOfBFTPInUSD: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var metamaskStatus, web3, accounts, networkChanged, accountChanged, networkId, tokenData, ethSwapData, ethSwap, tokenFarmData, tokenFarm;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                _context2.next = 3;\n                return window.ethereum._metamask.isUnlocked();\n\n              case 3:\n                metamaskStatus = _context2.sent;\n                console.log('metamaskStatus :', metamaskStatus);\n                _context2.next = 14;\n                break;\n\n              case 7:\n                if (!window.web3) {\n                  _context2.next = 14;\n                  break;\n                }\n\n                _context2.next = 10;\n                return window.ethereum._metamask.isUnlocked();\n\n              case 10:\n                metamaskStatus = _context2.sent;\n                console.log('metamaskStatus :', metamaskStatus);\n                _context2.next = 14;\n                break;\n\n              case 14:\n                if (!(metamaskStatus === false)) {\n                  _context2.next = 17;\n                  break;\n                }\n\n                _context2.next = 53;\n                break;\n\n              case 17:\n                if (!(metamaskStatus === true)) {\n                  _context2.next = 53;\n                  break;\n                }\n\n                window.ethereum.on(\"chainChanged\", function (chainId) {\n                  console.log('accountsChanges', chainId);\n                  window.location.reload();\n                });\n                window.ethereum.on('accountsChanged', function (account) {\n                  console.log('accountsChanges', account);\n                  window.location.reload();\n                });\n                this.setState({\n                  tokenBalance: /*#__PURE__*/React.createElement(\"span\", {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 31\n                    }\n                  }, \"Loading ...\")\n                });\n                this.setState({\n                  FormatedUserEthBalance: /*#__PURE__*/React.createElement(\"span\", {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 41\n                    }\n                  }, \"Loading ...\")\n                }); // this.setState({\n                //     FormatedUserEthBalance: <div class=\"spinner-border\" role=\"status\">\n                //         <span class=\"sr-only\">Loading...</span>\n                //     </div>\n                // })\n                // load WEB3\n\n                if (!window.ethereum) {\n                  _context2.next = 28;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 26;\n                return window.ethereum.enable();\n\n              case 26:\n                _context2.next = 29;\n                break;\n\n              case 28:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {// window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n                }\n\n              case 29:\n                // load Blockchain Data\n                web3 = window.web3;\n                _context2.next = 32;\n                return window.ethereum.request({\n                  method: \"eth_requestAccounts\"\n                });\n\n              case 32:\n                accounts = _context2.sent;\n                console.log('First accounts', accounts[0]);\n                this.setState({\n                  userAccount: accounts[0]\n                });\n                console.log('First Account Eth Balance : ', this.state.UserEthBalance);\n\n                networkChanged = function networkChanged(chainId) {\n                  console.log('chain_changed', chainId);\n                  window.location.reload();\n                };\n\n                accountChanged = function accountChanged(account) {\n                  console.log('account_changed', account);\n                  window.location.reload();\n                }; // Load Token\n\n\n                _context2.next = 40;\n                return web3.eth.net.getId();\n\n              case 40:\n                networkId = _context2.sent;\n                console.log('Accoutn Network ID :', networkId); // window.ethereum.on(\"chainChanged\", networkChanged)\n\n                this.setState({\n                  currentNetworkId: networkId\n                });\n                window.ethereum.on('accountsChanged', accountChanged); // setInterval(async () => {\n                //     const networkId2 = await web3.eth.net.getId()\n                //     if (networkId === networkId2) {\n                //         // console.log('matched');\n                //         this.setState({currentNetworkId: networkId2})\n                //     } else {\n                //         window.location.reload();\n                //     }\n                // }, 2000);\n\n                if (networkId === 4 || networkId === 1) {\n                  localStorage.setItem('userNetwork', 'Ethereum');\n                } else if (networkId === 97 || networkId === 56) {\n                  localStorage.setItem('userNetwork', 'Binance');\n                }\n\n                this.setState({\n                  CurrentUserNetwork: localStorage.getItem('userNetwork')\n                });\n                setTimeout(function () {\n                  if (_this2.state.CurrentUserNetwork === 'Binance') {\n                    _this2.setState({\n                      SelectSwapToken: 'BNB '\n                    });\n                  } else if (_this2.state.CurrentUserNetwork === 'Ethereum') {\n                    _this2.setState({\n                      SelectSwapToken: 'ETH '\n                    });\n                  }\n                }, 1);\n                tokenData = Token.networks[networkId];\n\n                if (tokenData) {\n                  setInterval( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                    var token, tokenBalance, tokenBalanceFormation1, tokenBalanceFormation2, tokenBalanceFormaton;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            token = new web3.eth.Contract(Token.abi, tokenData.address);\n                            _this2.state.token = token;\n                            _context.next = 4;\n                            return token.methods.balanceOf(_this2.state.userAccount).call();\n\n                          case 4:\n                            tokenBalance = _context.sent;\n                            tokenBalanceFormation1 = tokenBalance.toString();\n                            tokenBalanceFormation2 = window.web3.utils.fromWei(tokenBalanceFormation1, 'Ether');\n                            tokenBalanceFormaton = Number(tokenBalanceFormation2).toFixed(4);\n\n                            if (tokenBalanceFormaton === 0.0000 || tokenBalanceFormaton === '0.0000') {\n                              _this2.setState({\n                                tokenBalance: '0'\n                              });\n                            } else {\n                              _this2.setState({\n                                tokenBalance: Number(tokenBalanceFormation2).toFixed(4)\n                              });\n                            } // this.state.tokenBalance = tokenBalance.toString();\n\n\n                          case 9:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  })), 1000);\n                } else {\n                  this.state.UserEthBalance = null; // // window.alert('Invalid Network Id. Please select ** Binanace ** or ** Ethereum ** to Continue.')\n\n                  window.alert('Invalid Network Id. Please select ** Binanace ** from Metamask to Continue. Ethereum Comming Soon.');\n                } // Load EthSwap\n\n\n                ethSwapData = EthSwap.networks[networkId];\n\n                if (ethSwapData) {\n                  ethSwap = new web3.eth.Contract(EthSwap.abi, ethSwapData.address);\n                  this.setState({\n                    ethSwap: ethSwap\n                  });\n                } else {\n                  this.state.UserEthBalance = null; // // window.alert('Invalid Network Id. Please select ** Binanace ** or ** Ethereum ** to Continue.')\n\n                  window.alert('Invalid Network Id. Please select ** Binanace ** from Metamask to Continue. Ethereum Comming Soon.');\n                } // Load TokenFarm\n\n\n                tokenFarmData = EthSwap.networks[networkId];\n\n                if (tokenFarmData) {\n                  tokenFarm = new web3.eth.Contract(EthSwap.abi, tokenFarmData.address);\n                  this.setState({\n                    tokenFarm: tokenFarm\n                  }); // let stakingBalance = await tokenFarm.methods.stakingBalance(this.state.userAccount).call()\n                  // if (stakingBalance === null) {\n                  //     this.setState({ stakingBalance: '0' })\n                  // } else {\n                  //     this.setState({ stakingBalance: stakingBalance.toString() })\n                  // }\n                  // this.setState({ stakingBalance: stakingBalance.toString() })\n                } else {\n                  this.state.UserEthBalance = null; // // window.alert('Invalid Network Id. Please select ** Binanace ** or ** Ethereum ** to Continue.')\n\n                  window.alert('Invalid Network Id. Please select ** Binanace ** from Metamask to Continue. Ethereum Comming Soon.');\n                }\n\n              case 53:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var SelectSwapTokenContent;\n\n      if (this.state.SelectSwapToken != '' && this.state.SelectSwapToken != null) {\n        // console.log('SelectSwapToken', this.state.SelectSwapToken);\n        SelectSwapTokenContent = this.state.SelectSwapToken;\n      } else {\n        // console.log('SelectSwapToken', this.state.SelectSwapToken);\n        SelectSwapTokenContent = 'Token';\n      }\n\n      var userNetworkContent;\n\n      if (this.state.CurrentUserNetwork != '' && this.state.CurrentUserNetwork != null) {\n        // console.log('userNetwork', this.state.CurrentUserNetwork);\n        if (this.state.CurrentUserNetwork === 'Binance') {\n          userNetworkContent = /*#__PURE__*/React.createElement(\"span\", {\n            className: \"navBarNetworkBTn\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 21\n            }\n          }, \"BSC\");\n        } else {\n          userNetworkContent = /*#__PURE__*/React.createElement(\"span\", {\n            className: \"navBarNetworkBTn\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 38\n            }\n          }, \"ETH\");\n        }\n      } else {\n        userNetworkContent = /*#__PURE__*/React.createElement(\"span\", {\n          className: \"navBarDisNetworkBTn\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 34\n          }\n        }, \"Networks\");\n      }\n\n      var userAccountContent;\n\n      if (this.state.userAccount != '' && this.state.userAccount != null) {\n        var accountFirstLetters = this.state.userAccount.substring(0, 3);\n        var accountlastLetters = this.state.userAccount.substring(40);\n        var fullResult = accountFirstLetters + '..' + accountlastLetters;\n        setTimeout(function () {\n          localStorage.setItem('userAccount', _this3.state.userAccount);\n        }, 1);\n        userAccountContent = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"headerBtns sndHeaderBtn navHeaderBtnDiv headerBtnIst\",\n          style: {\n            paddingRight: '4px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 34\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: connectImg,\n          className: \"sndHeaderBtnist navConnectBtn\",\n          alt: \"connectImg\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"navBarConnectBTn\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 17\n          }\n        }, fullResult));\n      } else {\n        userAccountContent = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"headerBtns sndHeaderBtn navHeaderBtnDiv headerBtnIst\",\n          style: {\n            paddingRight: '4px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 34\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: connectImg,\n          className: \"sndHeaderBtnist navConnectBtn\",\n          alt: \"connectImg\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"navBarDisConnectBTn\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }\n        }, \"Connect\"));\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"headerNav\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"http://fairtrader.io/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"fairtraderLogo navFairtraderLogo\",\n        src: \"https://fairtrader.io/wp-content/uploads/2021/08/FairTrader_logo.svg\",\n        alt: \"fairtraderLogo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 33\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-8 headerLinks\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          display: \"inline\",\n          float: \"right\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"http://fairtrader.io/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"toggleBtn\",\n        src: toggleBtn,\n        alt: \"toggleBtn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 37\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"inline\",\n          float: \"right\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: {\n          pathname: '/WhichWallet'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 33\n        }\n      }, userAccountContent)), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"inline\",\n          float: \"right\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: {\n          pathname: '/SelectNetwork'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"headerBtns sndHeaderBtn networkBtn navHeaderBtnDiv headerBtnIst\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: networkImg,\n        className: \"sndHeaderBtnist navConnectSNDBtn\",\n        alt: \"connectImg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 41\n        }\n      }), userNetworkContent, /*#__PURE__*/React.createElement(\"img\", {\n        src: networkDropdown1,\n        className: \"sndHeaderBtnsnd navHeaderBtnDiv\",\n        alt: \"networkDropdown\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 41\n        }\n      }))))))), /*#__PURE__*/React.createElement(ToastContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/abdullah/Desktop/Fairtrader/Fairtrader_MainApp_Frontend/fairTraderMainApplication (react)/src/components/HeaderNav.jsx"],"names":["useEffect","useState","React","Component","Link","Route","Switch","useNavigate","Token","EthSwap","Web3","toggleBtn","networkImg","connectImg","networkDropdown1","ToastContainer","toast","axios","App","props","state","output","outputT","outputInUSD","CurrentUserNetwork","userAccount","UserEthBalance","FormatedUserEthBalance","SelectSwapToken","token","ethSwap","tokenBalance","loading","tokenFarm","contractGetAmount","transactionHash","receiptDiv1","receiptDiv2","currentNetworkId","livePriceBftp","livePriceBftpBNB","lPriceinCryptoBNB","lPriceinCryptoBftp","etherAmount","livePriceOfBNBInUSD","livePriceOfBFTPInUSD","window","ethereum","_metamask","isUnlocked","metamaskStatus","console","log","web3","on","chainId","location","reload","account","setState","enable","currentProvider","request","method","accounts","networkChanged","accountChanged","eth","net","getId","networkId","localStorage","setItem","getItem","setTimeout","tokenData","networks","setInterval","Contract","abi","address","methods","balanceOf","call","tokenBalanceFormation1","toString","tokenBalanceFormation2","utils","fromWei","tokenBalanceFormaton","Number","toFixed","alert","ethSwapData","tokenFarmData","SelectSwapTokenContent","userNetworkContent","userAccountContent","accountFirstLetters","substring","accountlastLetters","fullResult","paddingRight","display","float","pathname"],"mappings":";;;;;;;;AAAA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,kBAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,wCAAlB;AACA,OAAOC,OAAP,MAAoB,uCAApB;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,gBAAP,MAA6B,8CAA7B;AAMA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP,C,CAEA;AAEA;;AACA,OAAO,6BAAP,C,CAEA;AACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IACMC,G;;;AACF,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,GADC;AAETC,MAAAA,OAAO,EAAE,GAFA;AAGTC,MAAAA,WAAW,EAAE,GAHJ;AAITC,MAAAA,kBAAkB,EAAE,EAJX;AAKTC,MAAAA,WAAW,EAAE,EALJ;AAMTC,MAAAA,cAAc,EAAE,EANP;AAOTC,MAAAA,sBAAsB,EAAE,GAPf;AAQTC,MAAAA,eAAe,EAAE,EARR;AASTC,MAAAA,KAAK,EAAE,EATE;AAUTC,MAAAA,OAAO,EAAE,EAVA;AAWTC,MAAAA,YAAY,EAAE,GAXL;AAYTC,MAAAA,OAAO,EAAE,KAZA;AAaTC,MAAAA,SAAS,EAAE,EAbF;AAcTC,MAAAA,iBAAiB,EAAE,EAdV;AAeTC,MAAAA,eAAe,EAAE,EAfR;AAgBTC,MAAAA,WAAW,EAAE,KAhBJ;AAiBTC,MAAAA,WAAW,EAAE,KAjBJ;AAkBTC,MAAAA,gBAAgB,EAAE,EAlBT;AAmBTC,MAAAA,aAAa,EAAE,EAnBN;AAoBTC,MAAAA,gBAAgB,EAAE,EApBT;AAqBTC,MAAAA,iBAAiB,EAAE,EArBV;AAsBTC,MAAAA,kBAAkB,EAAE,EAtBX;AAuBTC,MAAAA,WAAW,EAAE,EAvBJ;AAwBTC,MAAAA,mBAAmB,EAAE,EAxBZ;AAyBTC,MAAAA,oBAAoB,EAAE;AAzBb,KAAb;AAFe;AA6BlB;;;;;;;;;;;;;qBAIOC,MAAM,CAACC,Q;;;;;;uBACgBD,MAAM,CAACC,QAAP,CAAgBC,SAAhB,CAA0BC,UAA1B,E;;;AAAvBC,gBAAAA,c;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,cAAhC;;;;;qBAEKJ,MAAM,CAACO,I;;;;;;uBACWP,MAAM,CAACC,QAAP,CAAgBC,SAAhB,CAA0BC,UAA1B,E;;;AAAvBC,gBAAAA,c;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,cAAhC;;;;;sBAOAA,cAAc,KAAK,K;;;;;;;;;sBAOZA,cAAc,KAAK,I;;;;;AAC1BJ,gBAAAA,MAAM,CAACC,QAAP,CAAgBO,EAAhB,CAAmB,cAAnB,EAAmC,UAAUC,OAAV,EAAmB;AAClDJ,kBAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BG,OAA/B;AACAT,kBAAAA,MAAM,CAACU,QAAP,CAAgBC,MAAhB;AACH,iBAHD;AAIAX,gBAAAA,MAAM,CAACC,QAAP,CAAgBO,EAAhB,CAAmB,iBAAnB,EAAsC,UAAUI,OAAV,EAAmB;AACrDP,kBAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BM,OAA/B;AACAZ,kBAAAA,MAAM,CAACU,QAAP,CAAgBC,MAAhB;AACH,iBAHD;AAKA,qBAAKE,QAAL,CAAc;AACV5B,kBAAAA,YAAY,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,iBAAd;AAGA,qBAAK4B,QAAL,CAAc;AACVhC,kBAAAA,sBAAsB,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADd,iBAAd,E,CAIA;AACA;AACA;AACA;AACA;AAGA;;qBACImB,MAAM,CAACC,Q;;;;;AACPD,gBAAAA,MAAM,CAACO,IAAP,GAAc,IAAI3C,IAAJ,CAASoC,MAAM,CAACC,QAAhB,CAAd;;uBACMD,MAAM,CAACC,QAAP,CAAgBa,MAAhB,E;;;;;;;AAEL,oBAAId,MAAM,CAACO,IAAX,EAAiB;AAClBP,kBAAAA,MAAM,CAACO,IAAP,GAAc,IAAI3C,IAAJ,CAASoC,MAAM,CAACO,IAAP,CAAYQ,eAArB,CAAd;AACH,iBAFI,MAGA,CACD;AACH;;;AACD;AACMR,gBAAAA,I,GAAOP,MAAM,CAACO,I;;uBAEGP,MAAM,CAACC,QAAP,CAAgBe,OAAhB,CAAwB;AAAEC,kBAAAA,MAAM,EAAE;AAAV,iBAAxB,C;;;AAAjBC,gBAAAA,Q;AACNb,gBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BY,QAAQ,CAAC,CAAD,CAAtC;AACA,qBAAKL,QAAL,CAAc;AAAElC,kBAAAA,WAAW,EAAEuC,QAAQ,CAAC,CAAD;AAAvB,iBAAd;AAEAb,gBAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4C,KAAKhC,KAAL,CAAWM,cAAvD;;AAEMuC,gBAAAA,c,GAAiB,SAAjBA,cAAiB,CAACV,OAAD,EAAa;AAChCJ,kBAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BG,OAA7B;AACAT,kBAAAA,MAAM,CAACU,QAAP,CAAgBC,MAAhB;AACH,iB;;AACKS,gBAAAA,c,GAAiB,SAAjBA,cAAiB,CAACR,OAAD,EAAa;AAChCP,kBAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BM,OAA/B;AACAZ,kBAAAA,MAAM,CAACU,QAAP,CAAgBC,MAAhB;AACH,iB,EAED;;;;uBACwBJ,IAAI,CAACc,GAAL,CAASC,GAAT,CAAaC,KAAb,E;;;AAAlBC,gBAAAA,S;AACNnB,gBAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCkB,SAApC,E,CACA;;AACA,qBAAKX,QAAL,CAAc;AAAErB,kBAAAA,gBAAgB,EAAEgC;AAApB,iBAAd;AAEAxB,gBAAAA,MAAM,CAACC,QAAP,CAAgBO,EAAhB,CAAmB,iBAAnB,EAAsCY,cAAtC,E,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,oBAAII,SAAS,KAAK,CAAd,IAAmBA,SAAS,KAAK,CAArC,EAAwC;AACpCC,kBAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoC,UAApC;AACH,iBAFD,MAEO,IAAIF,SAAS,KAAK,EAAd,IAAoBA,SAAS,KAAK,EAAtC,EAA0C;AAC7CC,kBAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoC,SAApC;AACH;;AACD,qBAAKb,QAAL,CAAc;AAAEnC,kBAAAA,kBAAkB,EAAE+C,YAAY,CAACE,OAAb,CAAqB,aAArB;AAAtB,iBAAd;AAEAC,gBAAAA,UAAU,CAAC,YAAM;AACb,sBAAI,MAAI,CAACtD,KAAL,CAAWI,kBAAX,KAAkC,SAAtC,EAAiD;AAC7C,oBAAA,MAAI,CAACmC,QAAL,CAAc;AAAE/B,sBAAAA,eAAe,EAAE;AAAnB,qBAAd;AACH,mBAFD,MAEO,IAAI,MAAI,CAACR,KAAL,CAAWI,kBAAX,KAAkC,UAAtC,EAAkD;AACrD,oBAAA,MAAI,CAACmC,QAAL,CAAc;AAAE/B,sBAAAA,eAAe,EAAE;AAAnB,qBAAd;AACH;AACJ,iBANS,EAMP,CANO,CAAV;AASM+C,gBAAAA,S,GAAYnE,KAAK,CAACoE,QAAN,CAAeN,SAAf,C;;AAClB,oBAAIK,SAAJ,EAAe;AACXE,kBAAAA,WAAW,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACFhD,4BAAAA,KADE,GACM,IAAIwB,IAAI,CAACc,GAAL,CAASW,QAAb,CAAsBtE,KAAK,CAACuE,GAA5B,EAAiCJ,SAAS,CAACK,OAA3C,CADN;AAER,4BAAA,MAAI,CAAC5D,KAAL,CAAWS,KAAX,GAAmBA,KAAnB;AAFQ;AAAA,mCAGiBA,KAAK,CAACoD,OAAN,CAAcC,SAAd,CAAwB,MAAI,CAAC9D,KAAL,CAAWK,WAAnC,EAAgD0D,IAAhD,EAHjB;;AAAA;AAGJpD,4BAAAA,YAHI;AAMJqD,4BAAAA,sBANI,GAMqBrD,YAAY,CAACsD,QAAb,EANrB;AAOJC,4BAAAA,sBAPI,GAOqBxC,MAAM,CAACO,IAAP,CAAYkC,KAAZ,CAAkBC,OAAlB,CAA0BJ,sBAA1B,EAAkD,OAAlD,CAPrB;AAQJK,4BAAAA,oBARI,GAQmBC,MAAM,CAACJ,sBAAD,CAAN,CAA+BK,OAA/B,CAAuC,CAAvC,CARnB;;AASR,gCAAIF,oBAAoB,KAAK,MAAzB,IAAmCA,oBAAoB,KAAK,QAAhE,EAA0E;AACtE,8BAAA,MAAI,CAAC9B,QAAL,CAAc;AAAE5B,gCAAAA,YAAY,EAAE;AAAhB,+BAAd;AACH,6BAFD,MAEO;AACH,8BAAA,MAAI,CAAC4B,QAAL,CAAc;AAAE5B,gCAAAA,YAAY,EAAE2D,MAAM,CAACJ,sBAAD,CAAN,CAA+BK,OAA/B,CAAuC,CAAvC;AAAhB,+BAAd;AACH,6BAbO,CAcR;;;AAdQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAD,IAeR,IAfQ,CAAX;AAgBH,iBAjBD,MAiBO;AACH,uBAAKvE,KAAL,CAAWM,cAAX,GAA4B,IAA5B,CADG,CAEH;;AACAoB,kBAAAA,MAAM,CAAC8C,KAAP,CAAa,oGAAb;AACH,iB,CAED;;;AACMC,gBAAAA,W,GAAcpF,OAAO,CAACmE,QAAR,CAAiBN,SAAjB,C;;AACpB,oBAAIuB,WAAJ,EAAiB;AACP/D,kBAAAA,OADO,GACG,IAAIuB,IAAI,CAACc,GAAL,CAASW,QAAb,CAAsBrE,OAAO,CAACsE,GAA9B,EAAmCc,WAAW,CAACb,OAA/C,CADH;AAEb,uBAAKrB,QAAL,CAAc;AAAE7B,oBAAAA,OAAO,EAAPA;AAAF,mBAAd;AACH,iBAHD,MAGO;AACH,uBAAKV,KAAL,CAAWM,cAAX,GAA4B,IAA5B,CADG,CAEH;;AACAoB,kBAAAA,MAAM,CAAC8C,KAAP,CAAa,oGAAb;AACH,iB,CAED;;;AACME,gBAAAA,a,GAAgBrF,OAAO,CAACmE,QAAR,CAAiBN,SAAjB,C;;AACtB,oBAAIwB,aAAJ,EAAmB;AACT7D,kBAAAA,SADS,GACG,IAAIoB,IAAI,CAACc,GAAL,CAASW,QAAb,CAAsBrE,OAAO,CAACsE,GAA9B,EAAmCe,aAAa,CAACd,OAAjD,CADH;AAEf,uBAAKrB,QAAL,CAAc;AAAE1B,oBAAAA,SAAS,EAATA;AAAF,mBAAd,EAFe,CAGf;AACA;AACA;AACA;AACA;AACA;AACA;AACH,iBAVD,MAUO;AACH,uBAAKb,KAAL,CAAWM,cAAX,GAA4B,IAA5B,CADG,CAEH;;AACAoB,kBAAAA,MAAM,CAAC8C,KAAP,CAAa,oGAAb;AACH;;;;;;;;;;;;;;;;;;6BAOA;AAAA;;AAEL,UAAIG,sBAAJ;;AACA,UAAI,KAAK3E,KAAL,CAAWQ,eAAX,IAA8B,EAA9B,IAAoC,KAAKR,KAAL,CAAWQ,eAAX,IAA8B,IAAtE,EAA4E;AACxE;AACAmE,QAAAA,sBAAsB,GAAG,KAAK3E,KAAL,CAAWQ,eAApC;AACH,OAHD,MAGO;AACH;AACAmE,QAAAA,sBAAsB,GAAG,OAAzB;AACH;;AAED,UAAIC,kBAAJ;;AACA,UAAI,KAAK5E,KAAL,CAAWI,kBAAX,IAAiC,EAAjC,IAAuC,KAAKJ,KAAL,CAAWI,kBAAX,IAAiC,IAA5E,EAAkF;AAC9E;AACA,YAAI,KAAKJ,KAAL,CAAWI,kBAAX,KAAkC,SAAtC,EAAiD;AAC7CwE,UAAAA,kBAAkB,gBACd;AAAM,YAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ;AAIH,SALD,MAKO;AACHA,UAAAA,kBAAkB,gBAAG;AAAM,YAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAArB;AAGH;AACJ,OAZD,MAYO;AACHA,QAAAA,kBAAkB,gBAAG;AAAM,UAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAArB;AAGH;;AAED,UAAIC,kBAAJ;;AACA,UAAI,KAAK7E,KAAL,CAAWK,WAAX,IAA0B,EAA1B,IAAgC,KAAKL,KAAL,CAAWK,WAAX,IAA0B,IAA9D,EAAoE;AAChE,YAAIyE,mBAAmB,GAAG,KAAK9E,KAAL,CAAWK,WAAX,CAAuB0E,SAAvB,CAAiC,CAAjC,EAAoC,CAApC,CAA1B;AACA,YAAIC,kBAAkB,GAAG,KAAKhF,KAAL,CAAWK,WAAX,CAAuB0E,SAAvB,CAAiC,EAAjC,CAAzB;AACA,YAAIE,UAAU,GAAGH,mBAAmB,GAAG,IAAtB,GAA6BE,kBAA9C;AACA1B,QAAAA,UAAU,CAAC,YAAM;AACbH,UAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoC,MAAI,CAACpD,KAAL,CAAWK,WAA/C;AACH,SAFS,EAEP,CAFO,CAAV;AAGAwE,QAAAA,kBAAkB,gBAAG;AAAK,UAAA,SAAS,EAAC,sDAAf;AAAsE,UAAA,KAAK,EAAE;AAAEK,YAAAA,YAAY,EAAE;AAAhB,WAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACjB;AAAK,UAAA,GAAG,EAAEzF,UAAV;AAAsB,UAAA,SAAS,EAAC,+BAAhC;AAAgE,UAAA,GAAG,EAAC,YAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADiB,eAEjB;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoCwF,UAApC,CAFiB,CAArB;AAKH,OAZD,MAYO;AACHJ,QAAAA,kBAAkB,gBAAG;AAAK,UAAA,SAAS,EAAC,sDAAf;AAAsE,UAAA,KAAK,EAAE;AAAEK,YAAAA,YAAY,EAAE;AAAhB,WAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACjB;AAAK,UAAA,GAAG,EAAEzF,UAAV;AAAsB,UAAA,SAAS,EAAC,+BAAhC;AAAgE,UAAA,GAAG,EAAC,YAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADiB,eAEjB;AAAM,UAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFiB,CAArB;AAKH;;AAED,0BACI,uDACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAG,QAAA,IAAI,EAAC,uBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,kCAAf;AAAkD,QAAA,GAAG,EAAC,sEAAtD;AAA6H,QAAA,GAAG,EAAC,gBAAjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,eAMI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAM,QAAA,KAAK,EAAE;AAAE0F,UAAAA,OAAO,EAAE,QAAX;AAAqBC,UAAAA,KAAK,EAAE;AAA5B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAG,QAAA,IAAI,EAAC,uBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,GAAG,EAAE7F,SAAhC;AAA2C,QAAA,GAAG,EAAC,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,eAMI;AAAK,QAAA,KAAK,EAAE;AAAE4F,UAAAA,OAAO,EAAE,QAAX;AAAqBC,UAAAA,KAAK,EAAE;AAA5B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAUI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKR,kBADL,CAVJ,CANJ,eAoBI;AAAK,QAAA,KAAK,EAAE;AAAEM,UAAAA,OAAO,EAAE,QAAX;AAAqBC,UAAAA,KAAK,EAAE;AAA5B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,iEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,GAAG,EAAE7F,UAAV;AAAsB,QAAA,SAAS,EAAC,kCAAhC;AAAmE,QAAA,GAAG,EAAC,YAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEKoF,kBAFL,eAGI;AAAK,QAAA,GAAG,EAAElF,gBAAV;AAA4B,QAAA,SAAS,EAAC,iCAAtC;AAAwE,QAAA,GAAG,EAAC,iBAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ,CADJ,CApBJ,CANJ,CADJ,CADJ,eAwCI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAxCJ,CADJ;AA4CH;;;;EApSaX,S;;AAuSlB,eAAee,GAAf","sourcesContent":["// react States\nimport { useEffect, useState } from 'react'\nimport React, { Component } from 'react';\nimport { Link, Route, Switch } from 'react-router-dom'\nimport { useNavigate } from \"react-router-dom\";\nimport Token from \"../ABIS_CutFeeGiveOrdrId/FTPToken.json\";\nimport EthSwap from \"../ABIS_CutFeeGiveOrdrId/EthSwap.json\";\n\nimport Web3 from 'web3'\n\nimport toggleBtn from '../Images/exchangeIcons/toggleBtn.png';\nimport networkImg from '../Images/exchangeIcons/networkImg.png';\nimport connectImg from '../Images/exchangeIcons/connectImg.png';\nimport networkDropdown1 from '../Images/exchangeIcons/networkDropdown1.png';\n\n\n\n\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\n\n// components\n\n// import './css/graph.css'\nimport './css/exchangeCss/graph.css'\n\n// css\n// import './css/swapPage.css'\nimport axios from 'axios';\nclass App extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            output: '0',\n            outputT: '0',\n            outputInUSD: '0',\n            CurrentUserNetwork: '',\n            userAccount: '',\n            UserEthBalance: '',\n            FormatedUserEthBalance: '0',\n            SelectSwapToken: '',\n            token: '',\n            ethSwap: '',\n            tokenBalance: '0',\n            loading: false,\n            tokenFarm: '',\n            contractGetAmount: '',\n            transactionHash: '',\n            receiptDiv1: false,\n            receiptDiv2: false,\n            currentNetworkId: '',\n            livePriceBftp: '',\n            livePriceBftpBNB: '',\n            lPriceinCryptoBNB: '',\n            lPriceinCryptoBftp: '',\n            etherAmount: '',\n            livePriceOfBNBInUSD: '',\n            livePriceOfBFTPInUSD: '',\n        }\n    }\n    async componentWillMount() {\n\n        let metamaskStatus;\n        if (window.ethereum) {\n            metamaskStatus = await window.ethereum._metamask.isUnlocked()\n            console.log('metamaskStatus :', metamaskStatus);\n        }\n        else if (window.web3) {\n            metamaskStatus = await window.ethereum._metamask.isUnlocked()\n            console.log('metamaskStatus :', metamaskStatus);\n        }\n        else {\n            // window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n        }\n\n\n        if (metamaskStatus === false) {\n            // toast.error(\"Please first connect your wallet\", {\n            //     position: 'top-right'\n            // })\n\n\n\n        } else if (metamaskStatus === true) {\n            window.ethereum.on(\"chainChanged\", function (chainId) {\n                console.log('accountsChanges', chainId);\n                window.location.reload()\n            })\n            window.ethereum.on('accountsChanged', function (account) {\n                console.log('accountsChanges', account);\n                window.location.reload()\n            })\n\n            this.setState({\n                tokenBalance: <span>Loading ...</span>\n            })\n            this.setState({\n                FormatedUserEthBalance: <span>Loading ...</span>\n            })\n\n            // this.setState({\n            //     FormatedUserEthBalance: <div class=\"spinner-border\" role=\"status\">\n            //         <span class=\"sr-only\">Loading...</span>\n            //     </div>\n            // })\n\n\n            // load WEB3\n            if (window.ethereum) {\n                window.web3 = new Web3(window.ethereum)\n                await window.ethereum.enable();\n            }\n            else if (window.web3) {\n                window.web3 = new Web3(window.web3.currentProvider)\n            }\n            else {\n                // window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n            }\n            // load Blockchain Data\n            const web3 = window.web3\n\n            const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" })\n            console.log('First accounts', accounts[0]);\n            this.setState({ userAccount: accounts[0] })\n\n            console.log('First Account Eth Balance : ', this.state.UserEthBalance);\n\n            const networkChanged = (chainId) => {\n                console.log('chain_changed', chainId);\n                window.location.reload()\n            };\n            const accountChanged = (account) => {\n                console.log('account_changed', account);\n                window.location.reload()\n            }\n\n            // Load Token\n            const networkId = await web3.eth.net.getId()\n            console.log('Accoutn Network ID :', networkId);\n            // window.ethereum.on(\"chainChanged\", networkChanged)\n            this.setState({ currentNetworkId: networkId })\n\n            window.ethereum.on('accountsChanged', accountChanged)\n            // setInterval(async () => {\n            //     const networkId2 = await web3.eth.net.getId()\n            //     if (networkId === networkId2) {\n            //         // console.log('matched');\n            //         this.setState({currentNetworkId: networkId2})\n            //     } else {\n            //         window.location.reload();\n            //     }\n            // }, 2000);\n            if (networkId === 4 || networkId === 1) {\n                localStorage.setItem('userNetwork', 'Ethereum')\n            } else if (networkId === 97 || networkId === 56) {\n                localStorage.setItem('userNetwork', 'Binance')\n            }\n            this.setState({ CurrentUserNetwork: localStorage.getItem('userNetwork') })\n\n            setTimeout(() => {\n                if (this.state.CurrentUserNetwork === 'Binance') {\n                    this.setState({ SelectSwapToken: 'BNB ' })\n                } else if (this.state.CurrentUserNetwork === 'Ethereum') {\n                    this.setState({ SelectSwapToken: 'ETH ' })\n                }\n            }, 1);\n\n\n            const tokenData = Token.networks[networkId]\n            if (tokenData) {\n                setInterval(async () => {\n                    const token = new web3.eth.Contract(Token.abi, tokenData.address)\n                    this.state.token = token;\n                    let tokenBalance = await token.methods.balanceOf(this.state.userAccount).call()\n\n\n                    let tokenBalanceFormation1 = tokenBalance.toString()\n                    let tokenBalanceFormation2 = window.web3.utils.fromWei(tokenBalanceFormation1, 'Ether')\n                    let tokenBalanceFormaton = Number(tokenBalanceFormation2).toFixed(4)\n                    if (tokenBalanceFormaton === 0.0000 || tokenBalanceFormaton === '0.0000') {\n                        this.setState({ tokenBalance: '0' })\n                    } else {\n                        this.setState({ tokenBalance: Number(tokenBalanceFormation2).toFixed(4) })\n                    }\n                    // this.state.tokenBalance = tokenBalance.toString();\n                }, 1000);\n            } else {\n                this.state.UserEthBalance = null\n                // // window.alert('Invalid Network Id. Please select ** Binanace ** or ** Ethereum ** to Continue.')\n                window.alert('Invalid Network Id. Please select ** Binanace ** from Metamask to Continue. Ethereum Comming Soon.')\n            }\n\n            // Load EthSwap\n            const ethSwapData = EthSwap.networks[networkId]\n            if (ethSwapData) {\n                const ethSwap = new web3.eth.Contract(EthSwap.abi, ethSwapData.address)\n                this.setState({ ethSwap })\n            } else {\n                this.state.UserEthBalance = null\n                // // window.alert('Invalid Network Id. Please select ** Binanace ** or ** Ethereum ** to Continue.')\n                window.alert('Invalid Network Id. Please select ** Binanace ** from Metamask to Continue. Ethereum Comming Soon.')\n            }\n\n            // Load TokenFarm\n            const tokenFarmData = EthSwap.networks[networkId]\n            if (tokenFarmData) {\n                const tokenFarm = new web3.eth.Contract(EthSwap.abi, tokenFarmData.address)\n                this.setState({ tokenFarm })\n                // let stakingBalance = await tokenFarm.methods.stakingBalance(this.state.userAccount).call()\n                // if (stakingBalance === null) {\n                //     this.setState({ stakingBalance: '0' })\n                // } else {\n                //     this.setState({ stakingBalance: stakingBalance.toString() })\n                // }\n                // this.setState({ stakingBalance: stakingBalance.toString() })\n            } else {\n                this.state.UserEthBalance = null\n                // // window.alert('Invalid Network Id. Please select ** Binanace ** or ** Ethereum ** to Continue.')\n                window.alert('Invalid Network Id. Please select ** Binanace ** from Metamask to Continue. Ethereum Comming Soon.')\n            }\n\n        }\n    }\n\n\n\n    render() {\n\n        let SelectSwapTokenContent\n        if (this.state.SelectSwapToken != '' && this.state.SelectSwapToken != null) {\n            // console.log('SelectSwapToken', this.state.SelectSwapToken);\n            SelectSwapTokenContent = this.state.SelectSwapToken\n        } else {\n            // console.log('SelectSwapToken', this.state.SelectSwapToken);\n            SelectSwapTokenContent = 'Token'\n        }\n\n        let userNetworkContent\n        if (this.state.CurrentUserNetwork != '' && this.state.CurrentUserNetwork != null) {\n            // console.log('userNetwork', this.state.CurrentUserNetwork);\n            if (this.state.CurrentUserNetwork === 'Binance') {\n                userNetworkContent =\n                    <span className='navBarNetworkBTn'>\n                        BSC\n                    </span>\n            } else {\n                userNetworkContent = <span className='navBarNetworkBTn'>\n                    ETH\n                </span>\n            }\n        } else {\n            userNetworkContent = <span className='navBarDisNetworkBTn'>\n                Networks\n            </span>\n        }\n\n        let userAccountContent\n        if (this.state.userAccount != '' && this.state.userAccount != null) {\n            let accountFirstLetters = this.state.userAccount.substring(0, 3);\n            let accountlastLetters = this.state.userAccount.substring(40);\n            let fullResult = accountFirstLetters + '..' + accountlastLetters\n            setTimeout(() => {\n                localStorage.setItem('userAccount', this.state.userAccount)\n            }, 1);\n            userAccountContent = <div className='headerBtns sndHeaderBtn navHeaderBtnDiv headerBtnIst' style={{ paddingRight: '4px' }}>\n                <img src={connectImg} className='sndHeaderBtnist navConnectBtn' alt=\"connectImg\" />\n                <span className='navBarConnectBTn'>{fullResult}</span>\n                {/* Connect */}\n            </div>\n        } else {\n            userAccountContent = <div className='headerBtns sndHeaderBtn navHeaderBtnDiv headerBtnIst' style={{ paddingRight: '4px' }}>\n                <img src={connectImg} className='sndHeaderBtnist navConnectBtn' alt=\"connectImg\" />\n                <span className='navBarDisConnectBTn'>Connect</span>\n                {/* Connect */}\n            </div>\n        }\n\n        return (\n            <>\n                <div className='headerNav'>\n                    <div className='row'>\n                        <div className='col-4'>\n                            <a href=\"http://fairtrader.io/\">\n                                <img className='fairtraderLogo navFairtraderLogo' src=\"https://fairtrader.io/wp-content/uploads/2021/08/FairTrader_logo.svg\" alt=\"fairtraderLogo\" />\n                            </a>\n                        </div>\n                        <div className=\"col-8 headerLinks\">\n                            <span style={{ display: \"inline\", float: \"right\" }}>\n                                <a href=\"http://fairtrader.io/\">\n                                    <img className='toggleBtn' src={toggleBtn} alt=\"toggleBtn\" />\n                                </a>\n                            </span>\n                            <div style={{ display: \"inline\", float: \"right\" }}>\n\n\n\n                                {/* <div className='headerBtns sndHeaderBtn navHeaderBtnDiv headerBtnIst' style={{ paddingRight: '4px' }}>\n                                    <img src={connectImg} className='sndHeaderBtnist navConnectBtn' alt=\"connectImg\" />\n                                    <span className='navConnectTxt' style={{ color: '#E0E102' }}>{fullResult}</span>\n                                </div> */}\n\n\n                                <Link to={{ pathname: '/WhichWallet' }}>\n                                    {userAccountContent}\n                                </Link>\n                            </div>\n                            <div style={{ display: \"inline\", float: \"right\" }}>\n                                <Link to={{ pathname: '/SelectNetwork' }}>\n                                    <div className='headerBtns sndHeaderBtn networkBtn navHeaderBtnDiv headerBtnIst'>\n                                        <img src={networkImg} className='sndHeaderBtnist navConnectSNDBtn' alt=\"connectImg\" />\n                                        {userNetworkContent}\n                                        <img src={networkDropdown1} className='sndHeaderBtnsnd navHeaderBtnDiv' alt=\"networkDropdown\" />\n                                    </div>\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <ToastContainer />\n            </>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}