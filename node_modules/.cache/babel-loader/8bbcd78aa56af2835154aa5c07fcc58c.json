{"ast":null,"code":"import _classCallCheck from \"/home/abdullah/Desktop/Fairtrader/Fairtrader_MainApp_Frontend/fairTraderMainApplication (react)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/abdullah/Desktop/Fairtrader/Fairtrader_MainApp_Frontend/fairTraderMainApplication (react)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/abdullah/Desktop/Fairtrader/Fairtrader_MainApp_Frontend/fairTraderMainApplication (react)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/abdullah/Desktop/Fairtrader/Fairtrader_MainApp_Frontend/fairTraderMainApplication (react)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/abdullah/Desktop/Fairtrader/Fairtrader_MainApp_Frontend/fairTraderMainApplication (react)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/abdullah/Desktop/Fairtrader/Fairtrader_MainApp_Frontend/fairTraderMainApplication (react)/src/components/Graph.jsx\";\nimport React, { Component } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport axios from \"axios\";\nimport bottomGraphWhiteHeading from '../Images/bottomGraphWhiteHeading.png';\nimport bottomGraphBlackHeading from '../Images/bottomGraphBlackHeading.png';\nimport dropdownImg from \"../Images/exchangeIcons/greenDropdown.png\";\n\nvar ApexChart = /*#__PURE__*/function (_React$Component) {\n  _inherits(ApexChart, _React$Component);\n\n  _createClass(ApexChart, [{\n    key: \"formatingInGraphData\",\n    value: function formatingInGraphData(res) {\n      // console.log(res);\n      var graphFormatedArray = [];\n      var graphAllOpenValues = res.data[\"o\"];\n      var graphAllHighValues = res.data[\"h\"];\n      var graphAllLowValues = res.data[\"l\"];\n      var graphAllCloseValues = res.data[\"c\"];\n      var graphAllTime = res.data[\"t\"];\n      graphAllTime.forEach(function (val, index) {\n        var emptyObj = new Object({\n          x: \"\",\n          y: []\n        });\n        graphFormatedArray.push(emptyObj);\n        graphFormatedArray[index].x = new Date(val * 1000);\n      });\n      graphAllOpenValues.forEach(function (val, index) {\n        graphFormatedArray[index].y.push(parseFloat(val));\n      });\n      graphAllHighValues.forEach(function (val, index) {\n        graphFormatedArray[index].y.push(parseFloat(val));\n      });\n      graphAllLowValues.forEach(function (val, index) {\n        graphFormatedArray[index].y.push(parseFloat(val));\n      });\n      graphAllCloseValues.forEach(function (val, index) {\n        graphFormatedArray[index].y.push(parseFloat(val));\n      });\n      this.setState({\n        GraphFormatedData: graphFormatedArray\n      }); // console.log(this.state.GraphFormatedData);\n\n      this.setState({\n        loading: false\n      });\n    }\n  }, {\n    key: \"graphDataGetterReq\",\n    value: function graphDataGetterReq() {\n      var _this2 = this;\n\n      var date = new Date(); // üëáÔ∏è timestamp in seconds (Unix timestamp)\n\n      var currentTimestampInSeconds = Math.floor(date.getTime() / 1000);\n      console.log(\"currentTimestampInSeconds\", currentTimestampInSeconds);\n      var selectedTimePeriod;\n      setTimeout(function () {\n        selectedTimePeriod = _this2.state.selectedTimePeriod;\n        var selectedTimePeriodSecs = _this2.state.selectedTimePeriodSecs;\n\n        if (selectedTimePeriod === \"1day\") {\n          selectedTimePeriodSecs = currentTimestampInSeconds - _this2.state.oneDaySeconds;\n        } else if (selectedTimePeriod === \"2day\") {\n          selectedTimePeriodSecs = currentTimestampInSeconds - _this2.state.twoDaySeconds;\n        } else if (selectedTimePeriod === \"3day\") {\n          selectedTimePeriodSecs = currentTimestampInSeconds - _this2.state.threeDaySeconds;\n        } else if (selectedTimePeriod === \"7day\") {\n          selectedTimePeriodSecs = currentTimestampInSeconds - _this2.state.sevenDaySeconds;\n        } else if (selectedTimePeriod === \"30day\") {\n          selectedTimePeriodSecs = currentTimestampInSeconds - _this2.state.thirtyDaySeconds;\n        }\n\n        _this2.setState({\n          selectedTimePeriodSecs: selectedTimePeriodSecs\n        });\n\n        console.log(\"selectedTimePeriodSecs\", selectedTimePeriodSecs);\n        axios.get(\"https://api.latoken.com/v2/tradingview/history?symbol=FTP%2FUSDT&resolution=60&from=\".concat(selectedTimePeriodSecs, \"&to=\").concat(currentTimestampInSeconds)).then(function (res) {\n          _this2.formatingInGraphData(res);\n        }).catch(function (err) {\n          console.log(err);\n        });\n      }, 100);\n    }\n  }, {\n    key: \"coinDetailHandle\",\n    value: function coinDetailHandle() {\n      var _this3 = this;\n\n      axios.get(\"https://abdullahyaqoob.com/\", // axios.get('/ticker/FTP/USDT',\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\"\n        }\n      }).then(function (res) {\n        // console.log(res);\n        _this3.setState({\n          coinDetail: res.data\n        }); // console.log(this.state.coinDetail);\n\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"handleCoinDetail\",\n    value: function handleCoinDetail() {\n      console.log(this.state.showCoinDetail);\n\n      if (this.state.showCoinDetail === true) {\n        this.setState({\n          showCoinDetail: false\n        });\n      } else {\n        this.setState({\n          showCoinDetail: true\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      this.graphDataGetterReq();\n      this.coinDetailHandle();\n      setInterval(function () {\n        _this4.graphDataGetterReq();\n      }, 25000); // }, 22222000);\n\n      setInterval(function () {\n        _this4.coinDetailHandle();\n      }, 10000);\n    }\n  }]);\n\n  function ApexChart(props) {\n    var _this;\n\n    _classCallCheck(this, ApexChart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ApexChart).call(this, props));\n    _this.state = {\n      showCoinDetail: false,\n      GraphFormatedData: [],\n      timestampInSeconds: \"\",\n      coinDetail: \"\",\n      oneDaySeconds: 1 * 86400,\n      twoDaySeconds: 2 * 86400,\n      threeDaySeconds: 3 * 86400,\n      sevenDaySeconds: 7 * 86400,\n      thirtyDaySeconds: 30 * 86400,\n      // \"1day\"\n      // \"2day\"\n      // \"3day\"\n      // \"7day\"\n      // \"30day\"\n      selectedTimePeriod: \"1day\",\n      selectedTimePeriodSecs: \"\",\n      options: {\n        chart: {\n          type: \"candlestick\",\n          height: 350\n        },\n        title: {\n          text: \"FairTrader FTP\",\n          align: \"left\"\n        },\n        xaxis: {\n          type: \"datetime\"\n        },\n        yaxis: {\n          tooltip: {\n            enabled: true\n          }\n        }\n      },\n      mobileChartoptions: {\n        chart: {\n          type: \"candlestick\",\n          height: 350\n        },\n        // title: {\n        //   text: \"FairTrader FTP\",\n        //   align: \"left\",\n        // },\n        xaxis: {\n          type: \"datetime\"\n        },\n        yaxis: {\n          tooltip: {\n            enabled: true\n          }\n        }\n      }\n    };\n    return _this;\n  }\n\n  _createClass(ApexChart, [{\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      // let graphHeightSize;\n      // if (window.screen.width <= 370) {\n      //   console.log('370');\n      //   graphHeightSize = 135;\n      // } else if (window.screen.width >= 418) {\n      //   console.log('418');\n      //   graphHeightSize = 170;\n      // } else if (window.screen.width >= 580) {\n      //   console.log('500');\n      //   graphHeightSize = 195;\n      // } else{\n      //   console.log('ELSE');\n      //   graphHeightSize = 155;\n      // }\n      var graphHeightSize;\n\n      if (window.screen.height <= 550) {\n        graphHeightSize = 120;\n      } else if (window.screen.height < 570) {\n        graphHeightSize = 136;\n      } else if (window.screen.height < 600) {\n        graphHeightSize = 142;\n      } else if (window.screen.height < 650) {\n        graphHeightSize = 155;\n      } else if (window.screen.height < 700) {\n        graphHeightSize = 165;\n      } else if (window.screen.height < 750) {\n        graphHeightSize = 185;\n      } else if (window.screen.height < 800) {\n        graphHeightSize = 206;\n      } else if (window.screen.height < 850) {\n        graphHeightSize = 218;\n      } else if (window.screen.height < 900) {\n        graphHeightSize = 230;\n      } else if (window.screen.height < 950) {\n        graphHeightSize = 250;\n      } else if (window.screen.height < 1000) {\n        graphHeightSize = 265;\n      } else if (window.screen.height < 1050) {\n        graphHeightSize = 290;\n      } else if (window.screen.height < 1100) {\n        graphHeightSize = 320;\n      } else if (window.screen.height < 1150) {\n        graphHeightSize = 340;\n      } else if (window.screen.height < 1200) {\n        graphHeightSize = 340;\n      } else if (window.screen.height < 1250) {\n        graphHeightSize = 360;\n      } else if (window.screen.height < 1300) {\n        graphHeightSize = 400;\n      } // else if (window.screen.width <= 418) {\n      //   console.log('418');\n      //   graphHeightSize = 170;\n      // } else if (window.screen.width >= 580) {\n      //   console.log('500');\n      //   graphHeightSize = 195;\n      // } else{\n      //   console.log('ELSE');\n      //   graphHeightSize = 155;\n      // }\n\n\n      var mainCOntetn; // if (this.state.loading === true) {\n      //   mainCOntetn = <h1>Loading....</h1>;\n      // } else {\n\n      mainCOntetn = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"desktopChart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"chart\",\n        style: {\n          width: \"93%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ReactApexChart, {\n        options: this.state.options,\n        series: [{\n          data: this.state.GraphFormatedData\n        }],\n        type: \"candlestick\",\n        height: 350,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 15\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"tabChart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"chart\",\n        style: {\n          width: \"93%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ReactApexChart, {\n        options: this.state.mobileChartoptions,\n        series: [{\n          data: this.state.GraphFormatedData\n        }],\n        type: \"candlestick\",\n        height: graphHeightSize,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }\n      })))); // }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bottomHeader graphTOpContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row graphCoinDetailRow GraphRow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row GraphRow\",\n        style: {\n          fontSize: \"13px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"bottomHeaderLogo\",\n        src: \"https://fairtrader.io/wp-content/uploads/2021/08/cropped-favicon-192x192.png\",\n        width: \"30px\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bottomHeaderTxt marginLeft\",\n        style: {\n          color: \"#1dccff\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }\n      }, \"FTP\")), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"b\", {\n        className: \"bottomHeaderTxt marginLeft colorWhite\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 19\n        }\n      }, \"$\", Number(this.state.coinDetail.lastPrice).toFixed(6)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"bottomheaderDrop marginLeftt graphUpDown\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: dropdownImg,\n        alt: \"dropdownImg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"b\", {\n        className: \"bottomHeaderTxt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 19\n        }\n      }, Number(this.state.coinDetail.change24h).toFixed(2)))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row GraphRow\",\n        style: {\n          fontSize: \"13px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          float: \"right\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"colorBlueBold bottomHeaderTxt fontTwelveHeading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 19\n        }\n      }, \"24hr\", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 25\n        }\n      }, \"_\"), \"Volume\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        className: \"bottomHeaderTxt fontTwelve colorWhite\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 21\n        }\n      }, \"$\", Number(this.state.coinDetail.volume24h).toFixed(2))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          float: \"right\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"colorBlueBold bottomHeaderTxt fontTwelveHeading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 19\n        }\n      }, \"Marketcap\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        className: \"bottomHeaderTxt fontTwelve colorWhite\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 21\n        }\n      }, \"$\", parseFloat(Number(this.state.coinDetail.lastPrice * 52000000000).toFixed(2))))))))), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"showCoinDetail\",\n        onClick: function onClick() {\n          _this5.handleCoinDetail();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 9\n        }\n      }, this.state.showCoinDetail === true ? /*#__PURE__*/React.createElement(React.Fragment, null, \"Show Graph\") : /*#__PURE__*/React.createElement(React.Fragment, null, \"Coin Detail\")), this.state.showCoinDetail === false ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"graphSecPart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-right graphDetailCss\",\n        style: {\n          color: \"#18C7C7\",\n          fontSize: \"14px\",\n          fontWeight: \"bold\",\n          marginRight: \"30px\",\n          zIndex: \"9999\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"graphSelectPeriod\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 17\n        }\n      }, \"Select Period:\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"graphFormats graphTimePeriod\",\n        onClick: function onClick() {\n          _this5.setState({\n            selectedTimePeriod: \"1day\"\n          });\n\n          _this5.graphDataGetterReq();\n        },\n        style: {\n          cursor: \"pointer\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 17\n        }\n      }, \"1D\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"graphFormats graphTimePeriod\",\n        onClick: function onClick() {\n          _this5.setState({\n            selectedTimePeriod: \"2day\"\n          });\n\n          _this5.graphDataGetterReq();\n        },\n        style: {\n          cursor: \"pointer\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 17\n        }\n      }, \"2D\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"graphFormats graphTimePeriod\",\n        onClick: function onClick() {\n          _this5.setState({\n            selectedTimePeriod: \"3day\"\n          });\n\n          _this5.graphDataGetterReq();\n        },\n        style: {\n          cursor: \"pointer\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 17\n        }\n      }, \"3D\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"graphFormats graphTimePeriod\",\n        onClick: function onClick() {\n          _this5.setState({\n            selectedTimePeriod: \"7day\"\n          });\n\n          _this5.graphDataGetterReq();\n        },\n        style: {\n          cursor: \"pointer\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 17\n        }\n      }, \"7D\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"graphFormats graphTimePeriod\",\n        onClick: function onClick() {\n          _this5.setState({\n            selectedTimePeriod: \"30day\"\n          });\n\n          _this5.graphDataGetterReq();\n        },\n        style: {\n          cursor: \"pointer\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 17\n        }\n      }, \"1M\")), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 21\n        }\n      }), mainCOntetn), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bottomDivOfGraph\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: bottomGraphWhiteHeading,\n        alt: \"bottomGraphWhiteHeading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 15\n        }\n      })))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row GraphRow\",\n        style: {\n          paddingTop: \"32px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row GraphRow\",\n        style: {\n          fontSize: \"13px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"bottomHeaderLogo\",\n        src: \"https://fairtrader.io/wp-content/uploads/2021/08/cropped-favicon-192x192.png\",\n        width: \"30px\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bottomHeaderTxt marginLeft graphDetailTxtSize\",\n        style: {\n          color: \"#1dccff\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 25\n        }\n      }, \"FTP\")), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"b\", {\n        className: \"bottomHeaderTxt marginLeft graphDetailTxtSize\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 23\n        }\n      }, \"$\", Number(this.state.coinDetail.lastPrice).toFixed(6)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"bottomheaderDrop marginLeftt graphUpDown\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: dropdownImg,\n        alt: \"dropdownImg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"b\", {\n        className: \"bottomHeaderTxt graphDetailTxtSize\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 23\n        }\n      }, Number(this.state.coinDetail.change24h).toFixed(2)))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row GraphRow\",\n        style: {\n          fontSize: \"13px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          float: \"right\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"colorBlueBold bottomHeaderTxt fontTwelveHeading graphDetailTxtSize\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 23\n        }\n      }, \"24hr\", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 29\n        }\n      }, \"_\"), \"Volume\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        className: \"bottomHeaderTxt fontTwelve graphDetailTxtSize\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 25\n        }\n      }, \"$\", Number(this.state.coinDetail.volume24h).toFixed(2))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          float: \"right\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"colorBlueBold bottomHeaderTxt fontTwelveHeading graphDetailTxtSize\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 23\n        }\n      }, \"Marketcap\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        className: \"bottomHeaderTxt fontTwelve graphDetailTxtSize\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 25\n        }\n      }, \"$\", parseFloat(Number(this.state.coinDetail.lastPrice * 52000000000).toFixed(2))))))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row GraphRow\",\n        style: {\n          marginTop: \"15px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row GraphRow\",\n        style: {\n          fontSize: \"13px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          float: \"right\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"colorBlueBold bottomHeaderTxt fontTwelveHeading graphDetailTxtSize\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 23\n        }\n      }, \"Symbol\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        className: \"bottomHeaderTxt fontTwelve graphDetailTxtSize\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 25\n        }\n      }, \"$\", this.state.coinDetail.symbol)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6\",\n        style: {\n          position: \"relative\",\n          left: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          float: \"right\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"colorBlueBold bottomHeaderTxt fontTwelveHeading graphDetailTxtSize\",\n        style: {\n          whiteSpace: \"nowrap\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 23\n        }\n      }, \"Last Quantity\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        className: \"bottomHeaderTxt fontTwelve graphDetailTxtSize\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 25\n        }\n      }, \"$\", parseFloat(Number(this.state.coinDetail.lastQuantity).toFixed(2)))))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row GraphRow\",\n        style: {\n          fontSize: \"13px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          float: \"right\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"colorBlueBold bottomHeaderTxt fontTwelveHeading graphDetailTxtSize\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 23\n        }\n      }, \"Best Bid\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        className: \"bottomHeaderTxt fontTwelve graphDetailTxtSize\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 25\n        }\n      }, \"$\", Number(this.state.coinDetail.bestBid).toFixed(5))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          float: \"right\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"colorBlueBold bottomHeaderTxt fontTwelveHeading graphDetailTxtSize\",\n        style: {\n          whiteSpace: \"nowrap\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 23\n        }\n      }, \"Best Ask\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        className: \"bottomHeaderTxt fontTwelve graphDetailTxtSize\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 25\n        }\n      }, \"$\", parseFloat(Number(this.state.coinDetail.bestAsk).toFixed(5)))))))))));\n    }\n  }]);\n\n  return ApexChart;\n}(React.Component);\n\nexport default ApexChart; // import React, { useRef, useEffect, useState } from \"react\";\n// import Chartjs from \"chart.js\";\n// import { historyOptions } from \"../chartConfigs/chartConfigs\";\n// import coinGecko from \"../apis/coinGecko\";\n// import dropdownImg from \"../Images/greenDropdown.png\";\n// import istGraph from \"../Images/istGraph.png\";\n// import secGraph from \"../Images/sndGraph.png\";\n// import graphPhoto from \"../Images/graphPhoto.png\";\n// //css\n// import \"./css/graph.css\";\n// import axios from \"axios\";\n// const HistoryChart = ({ data }) => {\n//   const chartRef = useRef();\n//   const chartRef2 = useRef();\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [timeFormat, setTimeFormat] = useState(\"24h\");\n//   const [coinData, setCoinData] = useState({});\n//   const [detail, setDetail] = useState(\"\");\n//   const [WhichGraphState, setWhichGraphState] = useState(\"first\");\n//   const formatData = (data) => {\n//     return data.map((el) => {\n//       return {\n//         t: el[0],\n//         y: el[1].toFixed(2),\n//       };\n//     });\n//   };\n//   const determineTimeFormat = () => {\n//     switch (timeFormat) {\n//       case \"24h\":\n//         return coinData.day;\n//       case \"7d\":\n//         return coinData.week;\n//       case \"1m\":\n//         return coinData.month;\n//       case \"1y\":\n//         return coinData.year;\n//       default:\n//         return coinData.day;\n//     }\n//   };\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       setIsLoading(true);\n//       const [day, week, month, year, detail] = await Promise.all([\n//         coinGecko.get(`/coins/bitcoin/market_chart/`, {\n//           params: {\n//             vs_currency: \"usd\",\n//             days: \"1\",\n//           },\n//         }),\n//         coinGecko.get(`/coins/bitcoin/market_chart/`, {\n//           params: {\n//             vs_currency: \"usd\",\n//             days: \"7\",\n//           },\n//         }),\n//         coinGecko.get(`/coins/bitcoin/market_chart/`, {\n//           params: {\n//             vs_currency: \"usd\",\n//             days: \"30\",\n//           },\n//         }),\n//         coinGecko.get(`/coins/bitcoin/market_chart/`, {\n//           params: {\n//             vs_currency: \"usd\",\n//             days: \"365\",\n//           },\n//         }),\n//         axios.get(\"https://api.coingecko.com/api/v3/coins/markets/\", {\n//           params: {\n//             vs_currency: \"usd\",\n//             ids: \"bitcoin\",\n//           },\n//         }),\n//       ]);\n//       // console.log(day);\n//       setCoinData({\n//         day: formatData(day.data.prices),\n//         week: formatData(week.data.prices),\n//         month: formatData(month.data.prices),\n//         year: formatData(year.data.prices),\n//         detail: detail.data[0],\n//       });\n//       setIsLoading(false);\n//     };\n//     fetchData();\n//   }, []);\n//   useEffect(() => {\n//     // FIRST CHART GRAPH\n//     // if (chartRef && chartRef.current && coinData.detail) {\n//     if (chartRef && chartRef.current) {\n//       const chartInstance = new Chartjs(chartRef.current, {\n//         type: \"line\",\n//         data: {\n//           datasets: [\n//             {\n//               labels: [\"Red\"],\n//               label: \"bitocin\",\n//               data: determineTimeFormat(),\n//               color: \"#00ff00\",\n//               backgroundColor: [\n//                 // 'rgba(255, 99, 132, 0.2)',\n//                 // 'rgba(255, 206, 86, 0.2)',\n//                 \"rgba(75, 192, 192, 0.2)\",\n//                 // 'rgba(153, 102, 255, 0.2)',\n//                 // 'rgba(255, 159, 64, 0.2)'\n//               ],\n//               borderColor: \"#00FF00\",\n//               pointBorderColor: \"yellow\",\n//               pointRadius: 0,\n//               fill: true,\n//               tension: 0.1,\n//               borderCapStyle: \"butt\",\n//             },\n//           ],\n//         },\n//         options: {\n//           legend: {\n//             display: false,\n//           },\n//           ...historyOptions,\n//           font: \"25\",\n//           color: \"#fff\",\n//           defaultColor: \"white\",\n//         },\n//       });\n//     }\n//     // FIRST CHART GRAPH\n//     if (chartRef2 && chartRef2.current) {\n//       const chartInstance = new Chartjs(chartRef2.current, {\n//         type: \"bar\",\n//         data: {\n//           datasets: [\n//             {\n//               labels: [\"Red\"],\n//               label: \"bitocin\",\n//               data: determineTimeFormat(),\n//               color: \"#00ff00\",\n//               backgroundColor: [\n//                 // 'rgba(255, 99, 132, 0.2)',\n//                 \"rgba(255, 206, 86, 0.2)\",\n//                 // 'rgba(75, 192, 192, 0.2)',\n//                 // 'rgba(153, 102, 255, 0.2)',\n//                 // 'rgba(255, 159, 64, 0.2)'\n//               ],\n//               borderColor: \"#00FF00\",\n//               pointBorderColor: \"yellow\",\n//               pointRadius: 0,\n//               fill: true,\n//               tension: 0.1,\n//               borderCapStyle: \"butt\",\n//             },\n//           ],\n//         },\n//         options: {\n//           legend: {\n//             display: false,\n//           },\n//           ...historyOptions,\n//           font: \"25\",\n//           color: \"#fff\",\n//           defaultColor: \"white\",\n//         },\n//       });\n//     }\n//   });\n//   const renderPrice = () => {\n//     if (coinData.detail) {\n//       return (\n//         <>\n//           <p className=\"my-0\">${coinData.detail.current_price.toFixed(2)}</p>\n//           <p\n//             className={\n//               coinData.detail.price_change_24h < 0\n//                 ? \"text-danger my-0\"\n//                 : \"text-success my-0\"\n//             }\n//           >\n//             {/* heloosssssssss */}\n//             {coinData.detail.price_change_percentage_24h.toFixed(2)}%\n//           </p>\n//         </>\n//       );\n//     }\n//   };\n//   let internationalNumberFormat = new Intl.NumberFormat(\"en-US\");\n//   let currentPrice;\n//   // console.log('coinData.detail', coinData.detail);\n//   if (coinData.detail) {\n//     currentPrice = internationalNumberFormat.format(\n//       coinData.detail.current_price.toFixed(2)\n//     );\n//   } else {\n//     currentPrice = \"undefined\";\n//   }\n//   let priceChangePercentage24;\n//   if (coinData.detail) {\n//     priceChangePercentage24 = (\n//       <span\n//         className={\n//           coinData.detail.price_change_24h < 0\n//             ? \"text-danger my-0\"\n//             : \"text-success my-0\"\n//         }\n//       >\n//         {coinData.detail.price_change_percentage_24h.toFixed(2)}%\n//       </span>\n//     );\n//   } else {\n//     priceChangePercentage24 = \"undefined\";\n//   }\n//   let hourVolume24;\n//   if (coinData.detail) {\n//     hourVolume24 = internationalNumberFormat.format(\n//       coinData.detail.total_volume\n//     );\n//   } else {\n//     hourVolume24 = \"undefined\";\n//   }\n//   let marketCap;\n//   if (coinData.detail) {\n//     marketCap = internationalNumberFormat.format(coinData.detail.market_cap);\n//   } else {\n//     marketCap = \"undefined\";\n//   }\n//   let whichGraph;\n//   if (WhichGraphState === \"first\") {\n//     whichGraph = chartRef;\n//   } else if (WhichGraphState === \"second\") {\n//     whichGraph = chartRef2;\n//   }\n//   return (\n//     <>\n//       <div className=\"bottomHeader\">\n//         {/* <center>\n//           <img src={graphPhoto} className=\"graphPhoto\" alt=\"graphPhoto\" />\n//         </center> */}\n//         <div className=\"row\">\n//           <div className=\"col-6\">\n//             <div className=\"row\" style={{ fontSize: \"13px\" }}>\n//               <div className=\"col-3\">\n//                 <img\n//                   className=\"bottomHeaderLogo\"\n//                   src=\"https://fairtrader.io/wp-content/uploads/2021/08/cropped-favicon-192x192.png\"\n//                   width=\"30px\"\n//                   alt=\"\"\n//                 />\n//               </div>\n//               <div className=\"col-3\">\n//                 <p>\n//                   <span\n//                     className=\"bottomHeaderTxt marginLeft\"\n//                     style={{ color: \"#1dccff\" }}\n//                   >\n//                     <b>Bitcoin</b>\n//                   </span>\n//                   <br />\n//                   <b className=\"bottomHeaderTxt marginLeft\">${currentPrice}</b>\n//                 </p>\n//               </div>\n//               <div className=\"col-3\">\n//                 <p className=\"bottomheaderDrop marginLeftt graphUpDown\">\n//                   <img src={dropdownImg} alt=\"dropdownImg\" />\n//                   <br />\n//                   <b className=\"bottomHeaderTxt\">{priceChangePercentage24}</b>\n//                 </p>\n//               </div>\n//             </div>\n//           </div>\n//           <div className=\"col-6\">\n//             <div className=\"row\" style={{ fontSize: \"13px\" }}>\n//               <div className=\"col-6\">\n//                 <p style={{ float: \"right\" }}>\n//                   <span className=\"colorBlueBold bottomHeaderTxt fontTwelveHeading\">\n//                     24hr<span style={{ color: \"black\" }}>_</span>Volume\n//                   </span>\n//                   <br />\n//                   <span>\n//                     <b className=\"bottomHeaderTxt fontTwelve\">\n//                       ${hourVolume24}\n//                     </b>\n//                   </span>\n//                 </p>\n//               </div>\n//               <div className=\"col-6\">\n//                 <p style={{ float: \"right\" }}>\n//                   <span className=\"colorBlueBold bottomHeaderTxt fontTwelveHeading\">\n//                     Marketcap\n//                   </span>{\" \"}\n//                   <br />\n//                   <span>\n//                     <b className=\"bottomHeaderTxt fontTwelve\">${marketCap}</b>\n//                   </span>\n//                 </p>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//         <p\n//           className=\"text-right\"\n//           style={{\n//             color: \"#18C7C7\",\n//             fontSize: \"14px\",\n//             fontWeight: \"bold\",\n//             marginRight: \"30px\",\n//             zIndex: \"9999\",\n//           }}\n//         >\n//           Select Period:{\" \"}\n//           <span style={{ color: \"black\" }}>\n//             <span className=\"graphFormats\">__</span>\n//           </span>\n//           <span\n//             className=\"graphFormats\"\n//             onClick={() => setTimeFormat(\"24h\")}\n//             style={{ cursor: \"pointer\" }}\n//           >\n//             1D<span style={{ color: \"black\" }}>__</span>\n//           </span>\n//           <span\n//             className=\"graphFormats\"\n//             onClick={() => setTimeFormat(\"7d\")}\n//             style={{ cursor: \"pointer\" }}\n//           >\n//             7D<span style={{ color: \"black\" }}>__</span>\n//           </span>\n//           <span\n//             className=\"graphFormats\"\n//             onClick={() => setTimeFormat(\"1m\")}\n//             style={{ cursor: \"pointer\" }}\n//           >\n//             1M<span style={{ color: \"black\" }}>__</span>\n//           </span>\n//           <span\n//             className=\"graphFormats\"\n//             onClick={() => setTimeFormat(\"1y\")}\n//             style={{ cursor: \"pointer\" }}\n//           >\n//             1Y<span style={{ color: \"black\" }}>___</span>\n//           </span>\n//           <span>\n//             <img onClick={() => setWhichGraphState(\"first\")} src={istGraph} />\n//           </span>\n//           <span style={{ color: \"black\" }}>\n//             <span className=\"graphFormats\">_</span>\n//           </span>\n//           <span>\n//             <img onClick={() => setWhichGraphState(\"second\")} src={secGraph} />\n//           </span>\n//         </p>\n//       </div>\n//       <div\n//         className=\"graph\"\n//         style={{ width: \"90%\", maxWidth: \"90%\", minWidth: \"90%\" }}\n//       >\n//         <div style={{ textAlign: \"center\" }}>\n//           <canvas ref={whichGraph} id=\"myChart\"></canvas>\n//         </div>\n//       </div>\n//     </>\n//   );\n// };\n// export default HistoryChart;","map":{"version":3,"sources":["/home/abdullah/Desktop/Fairtrader/Fairtrader_MainApp_Frontend/fairTraderMainApplication (react)/src/components/Graph.jsx"],"names":["React","Component","ReactApexChart","axios","bottomGraphWhiteHeading","bottomGraphBlackHeading","dropdownImg","ApexChart","res","graphFormatedArray","graphAllOpenValues","data","graphAllHighValues","graphAllLowValues","graphAllCloseValues","graphAllTime","forEach","val","index","emptyObj","Object","x","y","push","Date","parseFloat","setState","GraphFormatedData","loading","date","currentTimestampInSeconds","Math","floor","getTime","console","log","selectedTimePeriod","setTimeout","state","selectedTimePeriodSecs","oneDaySeconds","twoDaySeconds","threeDaySeconds","sevenDaySeconds","thirtyDaySeconds","get","then","formatingInGraphData","catch","err","headers","coinDetail","showCoinDetail","graphDataGetterReq","coinDetailHandle","setInterval","props","timestampInSeconds","options","chart","type","height","title","text","align","xaxis","yaxis","tooltip","enabled","mobileChartoptions","graphHeightSize","window","screen","mainCOntetn","width","fontSize","color","Number","lastPrice","toFixed","change24h","float","volume24h","handleCoinDetail","fontWeight","marginRight","zIndex","cursor","paddingTop","marginTop","symbol","position","left","whiteSpace","lastQuantity","bestBid","bestAsk"],"mappings":"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":["import React, { Component } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport axios from \"axios\";\nimport bottomGraphWhiteHeading from '../Images/bottomGraphWhiteHeading.png'\nimport bottomGraphBlackHeading from '../Images/bottomGraphBlackHeading.png'\n\nimport dropdownImg from \"../Images/exchangeIcons/greenDropdown.png\";\n\nclass ApexChart extends React.Component {\n  formatingInGraphData(res) {\n    // console.log(res);\n\n    let graphFormatedArray = [];\n    let graphAllOpenValues = res.data[\"o\"];\n    let graphAllHighValues = res.data[\"h\"];\n    let graphAllLowValues = res.data[\"l\"];\n    let graphAllCloseValues = res.data[\"c\"];\n    let graphAllTime = res.data[\"t\"];\n\n    graphAllTime.forEach(function (val, index) {\n      let emptyObj = new Object({ x: \"\", y: [] });\n      graphFormatedArray.push(emptyObj);\n      graphFormatedArray[index].x = new Date(val * 1000);\n    });\n\n    graphAllOpenValues.forEach(function (val, index) {\n      graphFormatedArray[index].y.push(parseFloat(val));\n    });\n\n    graphAllHighValues.forEach(function (val, index) {\n      graphFormatedArray[index].y.push(parseFloat(val));\n    });\n\n    graphAllLowValues.forEach(function (val, index) {\n      graphFormatedArray[index].y.push(parseFloat(val));\n    });\n\n    graphAllCloseValues.forEach(function (val, index) {\n      graphFormatedArray[index].y.push(parseFloat(val));\n    });\n\n    this.setState({ GraphFormatedData: graphFormatedArray });\n    // console.log(this.state.GraphFormatedData);\n    this.setState({ loading: false });\n  }\n\n  graphDataGetterReq() {\n    const date = new Date();\n\n    // üëáÔ∏è timestamp in seconds (Unix timestamp)\n    let currentTimestampInSeconds = Math.floor(date.getTime() / 1000);\n    console.log(\"currentTimestampInSeconds\", currentTimestampInSeconds);\n\n    let selectedTimePeriod;\n    setTimeout(() => {\n      selectedTimePeriod = this.state.selectedTimePeriod;\n      let selectedTimePeriodSecs = this.state.selectedTimePeriodSecs;\n\n      if (selectedTimePeriod === \"1day\") {\n        selectedTimePeriodSecs =\n          currentTimestampInSeconds - this.state.oneDaySeconds;\n      } else if (selectedTimePeriod === \"2day\") {\n        selectedTimePeriodSecs =\n          currentTimestampInSeconds - this.state.twoDaySeconds;\n      } else if (selectedTimePeriod === \"3day\") {\n        selectedTimePeriodSecs =\n          currentTimestampInSeconds - this.state.threeDaySeconds;\n      } else if (selectedTimePeriod === \"7day\") {\n        selectedTimePeriodSecs =\n          currentTimestampInSeconds - this.state.sevenDaySeconds;\n      } else if (selectedTimePeriod === \"30day\") {\n        selectedTimePeriodSecs =\n          currentTimestampInSeconds - this.state.thirtyDaySeconds;\n      }\n      this.setState({ selectedTimePeriodSecs });\n      console.log(\"selectedTimePeriodSecs\", selectedTimePeriodSecs);\n\n      axios\n        .get(\n          `https://api.latoken.com/v2/tradingview/history?symbol=FTP%2FUSDT&resolution=60&from=${selectedTimePeriodSecs}&to=${currentTimestampInSeconds}`\n        )\n        .then((res) => {\n          this.formatingInGraphData(res);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }, 100);\n  }\n\n  coinDetailHandle() {\n    axios\n      .get(\n        \"https://abdullahyaqoob.com/\",\n        // axios.get('/ticker/FTP/USDT',\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Headers\":\n              \"Origin, X-Requested-With, Content-Type, Accept\",\n          },\n        }\n      )\n      .then((res) => {\n        // console.log(res);\n        this.setState({ coinDetail: res.data });\n        // console.log(this.state.coinDetail);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  handleCoinDetail() {\n    console.log(this.state.showCoinDetail);\n    if (this.state.showCoinDetail === true) {\n      this.setState({ showCoinDetail: false });\n    } else {\n      this.setState({ showCoinDetail: true });\n    }\n  }\n\n  componentDidMount() {\n    this.graphDataGetterReq();\n    this.coinDetailHandle();\n\n    setInterval(() => {\n      this.graphDataGetterReq();\n    }, 25000);\n    // }, 22222000);\n\n    setInterval(() => {\n      this.coinDetailHandle();\n    }, 10000);\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showCoinDetail: false,\n      GraphFormatedData: [],\n      timestampInSeconds: \"\",\n      coinDetail: \"\",\n      oneDaySeconds: 1 * 86400,\n      twoDaySeconds: 2 * 86400,\n      threeDaySeconds: 3 * 86400,\n      sevenDaySeconds: 7 * 86400,\n      thirtyDaySeconds: 30 * 86400,\n      // \"1day\"\n      // \"2day\"\n      // \"3day\"\n      // \"7day\"\n      // \"30day\"\n      selectedTimePeriod: \"1day\",\n      selectedTimePeriodSecs: \"\",\n\n      options: {\n        chart: {\n          type: \"candlestick\",\n          height: 350,\n        },\n        title: {\n          text: \"FairTrader FTP\",\n          align: \"left\",\n        },\n        xaxis: {\n          type: \"datetime\",\n        },\n        yaxis: {\n          tooltip: {\n            enabled: true,\n          },\n        },\n      },\n      mobileChartoptions: {\n        chart: {\n          type: \"candlestick\",\n          height: 350,\n        },\n        // title: {\n        //   text: \"FairTrader FTP\",\n        //   align: \"left\",\n        // },\n        xaxis: {\n          type: \"datetime\",\n        },\n        yaxis: {\n          tooltip: {\n            enabled: true,\n          },\n        },\n      },\n    };\n  }\n\n  render() {\n    // let graphHeightSize;\n    // if (window.screen.width <= 370) {\n    //   console.log('370');\n    //   graphHeightSize = 135;\n    // } else if (window.screen.width >= 418) {\n    //   console.log('418');\n    //   graphHeightSize = 170;\n    // } else if (window.screen.width >= 580) {\n    //   console.log('500');\n    //   graphHeightSize = 195;\n    // } else{\n    //   console.log('ELSE');\n    //   graphHeightSize = 155;\n    // }\n\n    let graphHeightSize;\n    if (window.screen.height <= 550) {\n      graphHeightSize = 120;\n    } else if (window.screen.height < 570) {\n      graphHeightSize = 136;\n    } else if (window.screen.height < 600) {\n      graphHeightSize = 142;\n    } else if (window.screen.height < 650) {\n      graphHeightSize = 155;\n    } else if (window.screen.height < 700) {\n      graphHeightSize = 165;\n    } else if (window.screen.height < 750) {\n      graphHeightSize = 185;\n    } else if (window.screen.height < 800) {\n      graphHeightSize = 206;\n    } else if (window.screen.height < 850) {\n      graphHeightSize = 218;\n    } else if (window.screen.height < 900) {\n      graphHeightSize = 230;\n    } else if (window.screen.height < 950) {\n      graphHeightSize = 250;\n    } else if (window.screen.height < 1000) {\n      graphHeightSize = 265;\n    } else if (window.screen.height < 1050) {\n      graphHeightSize = 290;\n    } else if (window.screen.height < 1100) {\n      graphHeightSize = 320;\n    } else if (window.screen.height < 1150) {\n      graphHeightSize = 340;\n    } else if (window.screen.height < 1200) {\n      graphHeightSize = 340;\n    } else if (window.screen.height < 1250) {\n      graphHeightSize = 360;\n    } else if (window.screen.height < 1300) {\n      graphHeightSize = 400;\n    }\n    // else if (window.screen.width <= 418) {\n    //   console.log('418');\n    //   graphHeightSize = 170;\n    // } else if (window.screen.width >= 580) {\n    //   console.log('500');\n    //   graphHeightSize = 195;\n    // } else{\n    //   console.log('ELSE');\n    //   graphHeightSize = 155;\n    // }\n\n    let mainCOntetn;\n\n    // if (this.state.loading === true) {\n    //   mainCOntetn = <h1>Loading....</h1>;\n    // } else {\n    mainCOntetn = (\n      <>\n        {/* {window.screen.width <= 1000 ? <div id=\"chart\" style={{ width: \"93%\", marginTop: '-50px' }} : <div id=\"chart\" style={{ width: \"93%\" }} >} */}\n        <div id=\"desktopChart\">\n          <center>\n            <div id=\"chart\" style={{ width: \"93%\" }}>\n              <ReactApexChart\n                options={this.state.options}\n                series={[{ data: this.state.GraphFormatedData }]}\n                type=\"candlestick\"\n                height={350}\n              />\n            </div>\n          </center>\n        </div>\n\n        <div id=\"tabChart\">\n          <div id=\"chart\" style={{ width: \"93%\" }}>\n            <ReactApexChart\n              options={this.state.mobileChartoptions}\n              series={[{ data: this.state.GraphFormatedData }]}\n              type=\"candlestick\"\n              height={graphHeightSize}\n            />\n          </div>\n        </div>\n      </>\n    );\n    // }\n\n    return (\n      <div className=\"bottomHeader graphTOpContainer\">\n        <div className=\"row graphCoinDetailRow GraphRow\">\n          <div className=\"col-6\">\n            <div className=\"row GraphRow\" style={{ fontSize: \"13px\" }}>\n              <div className=\"col-3\">\n                <img\n                  className=\"bottomHeaderLogo\"\n                  src=\"https://fairtrader.io/wp-content/uploads/2021/08/cropped-favicon-192x192.png\"\n                  width=\"30px\"\n                  alt=\"\"\n                />\n              </div>\n              <div className=\"col-4\">\n                <p>\n                  <span\n                    className=\"bottomHeaderTxt marginLeft\"\n                    style={{ color: \"#1dccff\" }}\n                  >\n                    <b>FTP</b>\n                  </span>\n                  <br />\n                  {/* <b className='bottomHeaderTxt marginLeft'>${currentPrice}</b> */}\n                  <b className=\"bottomHeaderTxt marginLeft colorWhite\">\n                    ${Number(this.state.coinDetail.lastPrice).toFixed(6)}\n                  </b>\n                </p>\n              </div>\n              <div className=\"col-3\">\n                <p className=\"bottomheaderDrop marginLeftt graphUpDown\">\n                  <img src={dropdownImg} alt=\"dropdownImg\" />\n                  <br />\n                  {/* <b className='bottomHeaderTxt'>{priceChangePercentage24}</b> */}\n                  <b className=\"bottomHeaderTxt\">\n                    {Number(this.state.coinDetail.change24h).toFixed(2)}\n                  </b>\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-6\">\n            <div className=\"row GraphRow\" style={{ fontSize: \"13px\" }}>\n              <div className=\"col-8\">\n                <p style={{ float: \"right\" }}>\n                  <span className=\"colorBlueBold bottomHeaderTxt fontTwelveHeading\">\n                    24hr<span style={{ color: \"black\" }}>_</span>Volume\n                  </span>\n                  <br />\n                  <span>\n                    {/* <b className='bottomHeaderTxt fontTwelve'>${hourVolume24}</b> */}\n                    <b className=\"bottomHeaderTxt fontTwelve colorWhite\">\n                      ${Number(this.state.coinDetail.volume24h).toFixed(2)}\n                    </b>\n                  </span>\n                </p>\n              </div>\n              <div className=\"col-4\">\n                <p style={{ float: \"right\" }}>\n                  <span className=\"colorBlueBold bottomHeaderTxt fontTwelveHeading\">\n                    Marketcap\n                  </span>{\" \"}\n                  <br />\n                  <span>\n                    {/* <b className='bottomHeaderTxt fontTwelve'>${marketCap}</b></span></p></div> */}\n                    <b className=\"bottomHeaderTxt fontTwelve colorWhite\">\n                      $\n                      {parseFloat(\n                        Number(\n                          this.state.coinDetail.lastPrice * 52000000000\n                        ).toFixed(2)\n                      )}\n                    </b>\n                  </span>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <button\n          className=\"showCoinDetail\"\n          onClick={() => {\n            this.handleCoinDetail();\n          }}\n        >\n          {this.state.showCoinDetail === true ? (\n            <>Show Graph</>\n          ) : (\n            <>Coin Detail</>\n          )}\n        </button>\n        {this.state.showCoinDetail === false ? (\n          <>\n            <div id=\"graphSecPart\">\n              <p\n                className=\"text-right graphDetailCss\"\n                style={{\n                  color: \"#18C7C7\",\n                  fontSize: \"14px\",\n                  fontWeight: \"bold\",\n                  marginRight: \"30px\",\n                  zIndex: \"9999\",\n                }}\n              >\n                <span className=\"graphSelectPeriod\">Select Period:</span>\n                <span\n                  className=\"graphFormats graphTimePeriod\"\n                  onClick={() => {\n                    this.setState({ selectedTimePeriod: \"1day\" });\n                    this.graphDataGetterReq();\n                  }}\n                  style={{ cursor: \"pointer\" }}\n                >\n                  1D\n                </span>\n                <span\n                  className=\"graphFormats graphTimePeriod\"\n                  onClick={() => {\n                    this.setState({ selectedTimePeriod: \"2day\" });\n                    this.graphDataGetterReq();\n                  }}\n                  style={{ cursor: \"pointer\" }}\n                >\n                  2D\n                </span>\n                <span\n                  className=\"graphFormats graphTimePeriod\"\n                  onClick={() => {\n                    this.setState({ selectedTimePeriod: \"3day\" });\n                    this.graphDataGetterReq();\n                  }}\n                  style={{ cursor: \"pointer\" }}\n                >\n                  3D\n                </span>\n                <span\n                  className=\"graphFormats graphTimePeriod\"\n                  onClick={() => {\n                    this.setState({ selectedTimePeriod: \"7day\" });\n                    this.graphDataGetterReq();\n                  }}\n                  style={{ cursor: \"pointer\" }}\n                >\n                  7D\n                </span>\n                <span\n                  className=\"graphFormats graphTimePeriod\"\n                  onClick={() => {\n                    this.setState({ selectedTimePeriod: \"30day\" });\n                    this.graphDataGetterReq();\n                  }}\n                  style={{ cursor: \"pointer\" }}\n                >\n                  1M\n                </span>\n                {/* <span><img onClick={() => setWhichGraphState(\"first\")} src={istGraph} /></span><span style={{ color: 'black' }}><span className=\"graphFormats\">_</span></span>\n          <span><img onClick={() => setWhichGraphState(\"second\")} src={secGraph} /></span> */}\n                {/* <span>\n                <img src={istGraph} />\n              </span>\n              <span style={{ color: \"black\" }}>\n                <span className=\"graphFormats\">_</span>\n              </span>\n              <span>\n                <img src={secGraph} />\n              </span> */}\n              </p>\n              <br /><br />\n              {mainCOntetn}\n            </div>\n            <div className=\"bottomDivOfGraph\">\n              <center>\n              {/* <img src={bottomGraphBlackHeading} alt=\"bottomGraphWhiteHeading\" style={{width: '80%'}} /> */}\n              <img src={bottomGraphWhiteHeading} alt=\"bottomGraphWhiteHeading\" />\n              </center>\n            </div>\n            {/* <div className=\"bottomDivOfGraph\">\n              <h2>Why is Fair Trader the payment gateway of the future.</h2>\n              <h5>Company HignLights</h5>\n              <p>Fair Trader is one of the most exciting crypto projects to come out in recent times. The Fair Trading Platform will provide safe commerce in both goods and services, halt and reverse transactions, enforce sellers‚Äô guarantees, and other innovative options not currently offered on the leading Payment Gateways. Best of all it will work for both crypto and fiat currencies.</p>\n              <p>ABILITY TO RESOLVE DISPUTES ACCORDING TO PEOPLES RELIGIOUS BELIEFS:  Fair Trader will be the first payment platform in the world that will allow people to conduct commerce according to their religious beliefs. Now your rabbi, priest, muslim cleric or a common law nominee can oversee your transaction to help both parties resolve disputes with ease avoiding costly litigations.</p>\n              <p>Our team and community is growing fast. Join us in our vision to make the world a fairer place.</p>\n            </div> */}\n          </>\n        ) : (\n          <>\n            <div className=\"row GraphRow\" style={{ paddingTop: \"32px\" }}>\n              <div className=\"col-6\">\n                <div className=\"row GraphRow\" style={{ fontSize: \"13px\" }}>\n                  <div className=\"col-3\">\n                    <img\n                      className=\"bottomHeaderLogo\"\n                      src=\"https://fairtrader.io/wp-content/uploads/2021/08/cropped-favicon-192x192.png\"\n                      width=\"30px\"\n                      alt=\"\"\n                    />\n                  </div>\n                  <div className=\"col-4\">\n                    <p>\n                      <span\n                        className=\"bottomHeaderTxt marginLeft graphDetailTxtSize\"\n                        style={{ color: \"#1dccff\" }}\n                      >\n                        <b>FTP</b>\n                      </span>\n                      <br />\n                      {/* <b className='bottomHeaderTxt marginLeft'>${currentPrice}</b> */}\n                      <b className=\"bottomHeaderTxt marginLeft graphDetailTxtSize\">\n                        ${Number(this.state.coinDetail.lastPrice).toFixed(6)}\n                      </b>\n                    </p>\n                  </div>\n                  <div className=\"col-4\">\n                    <p className=\"bottomheaderDrop marginLeftt graphUpDown\">\n                      <img src={dropdownImg} alt=\"dropdownImg\" />\n                      <br />\n                      {/* <b className='bottomHeaderTxt'>{priceChangePercentage24}</b> */}\n                      <b className=\"bottomHeaderTxt graphDetailTxtSize\">\n                        {Number(this.state.coinDetail.change24h).toFixed(2)}\n                      </b>\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-6\">\n                <div className=\"row GraphRow\" style={{ fontSize: \"13px\" }}>\n                  <div className=\"col-6\">\n                    <p style={{ float: \"right\" }}>\n                      <span className=\"colorBlueBold bottomHeaderTxt fontTwelveHeading graphDetailTxtSize\">\n                        24hr<span style={{ color: \"black\" }}>_</span>Volume\n                      </span>\n                      <br />\n                      <span>\n                        {/* <b className='bottomHeaderTxt fontTwelve'>${hourVolume24}</b> */}\n                        <b className=\"bottomHeaderTxt fontTwelve graphDetailTxtSize\">\n                          ${Number(this.state.coinDetail.volume24h).toFixed(2)}\n                        </b>\n                      </span>\n                    </p>\n                  </div>\n                  <div className=\"col-6\">\n                    <p style={{ float: \"right\" }}>\n                      <span className=\"colorBlueBold bottomHeaderTxt fontTwelveHeading graphDetailTxtSize\">\n                        Marketcap\n                      </span>{\" \"}\n                      <br />\n                      <span>\n                        {/* <b className='bottomHeaderTxt fontTwelve'>${marketCap}</b></span></p></div> */}\n                        <b className=\"bottomHeaderTxt fontTwelve graphDetailTxtSize\">\n                          $\n                          {parseFloat(\n                            Number(\n                              this.state.coinDetail.lastPrice * 52000000000\n                            ).toFixed(2)\n                          )}\n                        </b>\n                      </span>\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row GraphRow\" style={{ marginTop: \"15px\" }}>\n              <div className=\"col-6\">\n                <div className=\"row GraphRow\" style={{ fontSize: \"13px\" }}>\n                  <div className=\"col-6\">\n                    <p style={{ float: \"right\" }}>\n                      <span className=\"colorBlueBold bottomHeaderTxt fontTwelveHeading graphDetailTxtSize\">\n                        Symbol\n                      </span>\n                      <br />\n                      <span>\n                        {/* <b className='bottomHeaderTxt fontTwelve'>${hourVolume24}</b> */}\n                        <b className=\"bottomHeaderTxt fontTwelve graphDetailTxtSize\">\n                          ${this.state.coinDetail.symbol}\n                        </b>\n                      </span>\n                    </p>\n                  </div>\n                  <div\n                    className=\"col-6\"\n                    style={{ position: \"relative\", left: \"20px\" }}\n                  >\n                    <p style={{ float: \"right\" }}>\n                      <span\n                        className=\"colorBlueBold bottomHeaderTxt fontTwelveHeading graphDetailTxtSize\"\n                        style={{ whiteSpace: \"nowrap\" }}\n                      >\n                        Last Quantity\n                      </span>{\" \"}\n                      <br />\n                      <span>\n                        {/* <b className='bottomHeaderTxt fontTwelve'>${marketCap}</b></span></p></div> */}\n                        <b className=\"bottomHeaderTxt fontTwelve graphDetailTxtSize\">\n                          $\n                          {parseFloat(\n                            Number(this.state.coinDetail.lastQuantity).toFixed(\n                              2\n                            )\n                          )}\n                        </b>\n                      </span>\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-6\">\n                <div className=\"row GraphRow\" style={{ fontSize: \"13px\" }}>\n                  <div className=\"col-6\">\n                    <p style={{ float: \"right\" }}>\n                      <span className=\"colorBlueBold bottomHeaderTxt fontTwelveHeading graphDetailTxtSize\">\n                        Best Bid\n                      </span>\n                      <br />\n                      <span>\n                        {/* <b className='bottomHeaderTxt fontTwelve'>${hourVolume24}</b> */}\n                        <b className=\"bottomHeaderTxt fontTwelve graphDetailTxtSize\">\n                          ${Number(this.state.coinDetail.bestBid).toFixed(5)}\n                        </b>\n                      </span>\n                    </p>\n                  </div>\n                  <div className=\"col-6\">\n                    <p style={{ float: \"right\" }}>\n                      <span\n                        className=\"colorBlueBold bottomHeaderTxt fontTwelveHeading graphDetailTxtSize\"\n                        style={{ whiteSpace: \"nowrap\" }}\n                      >\n                        Best Ask\n                      </span>{\" \"}\n                      <br />\n                      <span>\n                        {/* <b className='bottomHeaderTxt fontTwelve'>${marketCap}</b></span></p></div> */}\n                        <b className=\"bottomHeaderTxt fontTwelve graphDetailTxtSize\">\n                          $\n                          {parseFloat(\n                            Number(this.state.coinDetail.bestAsk).toFixed(5)\n                          )}\n                        </b>\n                      </span>\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ApexChart;\n\n// import React, { useRef, useEffect, useState } from \"react\";\n// import Chartjs from \"chart.js\";\n// import { historyOptions } from \"../chartConfigs/chartConfigs\";\n// import coinGecko from \"../apis/coinGecko\";\n// import dropdownImg from \"../Images/greenDropdown.png\";\n// import istGraph from \"../Images/istGraph.png\";\n// import secGraph from \"../Images/sndGraph.png\";\n// import graphPhoto from \"../Images/graphPhoto.png\";\n\n// //css\n// import \"./css/graph.css\";\n// import axios from \"axios\";\n// const HistoryChart = ({ data }) => {\n//   const chartRef = useRef();\n//   const chartRef2 = useRef();\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [timeFormat, setTimeFormat] = useState(\"24h\");\n//   const [coinData, setCoinData] = useState({});\n//   const [detail, setDetail] = useState(\"\");\n//   const [WhichGraphState, setWhichGraphState] = useState(\"first\");\n\n//   const formatData = (data) => {\n//     return data.map((el) => {\n//       return {\n//         t: el[0],\n//         y: el[1].toFixed(2),\n//       };\n//     });\n//   };\n\n//   const determineTimeFormat = () => {\n//     switch (timeFormat) {\n//       case \"24h\":\n//         return coinData.day;\n//       case \"7d\":\n//         return coinData.week;\n//       case \"1m\":\n//         return coinData.month;\n//       case \"1y\":\n//         return coinData.year;\n//       default:\n//         return coinData.day;\n//     }\n//   };\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       setIsLoading(true);\n//       const [day, week, month, year, detail] = await Promise.all([\n//         coinGecko.get(`/coins/bitcoin/market_chart/`, {\n//           params: {\n//             vs_currency: \"usd\",\n//             days: \"1\",\n//           },\n//         }),\n//         coinGecko.get(`/coins/bitcoin/market_chart/`, {\n//           params: {\n//             vs_currency: \"usd\",\n//             days: \"7\",\n//           },\n//         }),\n//         coinGecko.get(`/coins/bitcoin/market_chart/`, {\n//           params: {\n//             vs_currency: \"usd\",\n//             days: \"30\",\n//           },\n//         }),\n//         coinGecko.get(`/coins/bitcoin/market_chart/`, {\n//           params: {\n//             vs_currency: \"usd\",\n//             days: \"365\",\n//           },\n//         }),\n//         axios.get(\"https://api.coingecko.com/api/v3/coins/markets/\", {\n//           params: {\n//             vs_currency: \"usd\",\n//             ids: \"bitcoin\",\n//           },\n//         }),\n//       ]);\n//       // console.log(day);\n\n//       setCoinData({\n//         day: formatData(day.data.prices),\n//         week: formatData(week.data.prices),\n//         month: formatData(month.data.prices),\n//         year: formatData(year.data.prices),\n//         detail: detail.data[0],\n//       });\n//       setIsLoading(false);\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   useEffect(() => {\n//     // FIRST CHART GRAPH\n//     // if (chartRef && chartRef.current && coinData.detail) {\n//     if (chartRef && chartRef.current) {\n//       const chartInstance = new Chartjs(chartRef.current, {\n//         type: \"line\",\n//         data: {\n//           datasets: [\n//             {\n//               labels: [\"Red\"],\n//               label: \"bitocin\",\n//               data: determineTimeFormat(),\n//               color: \"#00ff00\",\n//               backgroundColor: [\n//                 // 'rgba(255, 99, 132, 0.2)',\n//                 // 'rgba(255, 206, 86, 0.2)',\n//                 \"rgba(75, 192, 192, 0.2)\",\n//                 // 'rgba(153, 102, 255, 0.2)',\n//                 // 'rgba(255, 159, 64, 0.2)'\n//               ],\n//               borderColor: \"#00FF00\",\n//               pointBorderColor: \"yellow\",\n//               pointRadius: 0,\n//               fill: true,\n//               tension: 0.1,\n//               borderCapStyle: \"butt\",\n//             },\n//           ],\n//         },\n//         options: {\n//           legend: {\n//             display: false,\n//           },\n//           ...historyOptions,\n//           font: \"25\",\n//           color: \"#fff\",\n//           defaultColor: \"white\",\n//         },\n//       });\n//     }\n\n//     // FIRST CHART GRAPH\n\n//     if (chartRef2 && chartRef2.current) {\n//       const chartInstance = new Chartjs(chartRef2.current, {\n//         type: \"bar\",\n//         data: {\n//           datasets: [\n//             {\n//               labels: [\"Red\"],\n//               label: \"bitocin\",\n//               data: determineTimeFormat(),\n//               color: \"#00ff00\",\n//               backgroundColor: [\n//                 // 'rgba(255, 99, 132, 0.2)',\n//                 \"rgba(255, 206, 86, 0.2)\",\n//                 // 'rgba(75, 192, 192, 0.2)',\n//                 // 'rgba(153, 102, 255, 0.2)',\n//                 // 'rgba(255, 159, 64, 0.2)'\n//               ],\n//               borderColor: \"#00FF00\",\n//               pointBorderColor: \"yellow\",\n//               pointRadius: 0,\n//               fill: true,\n//               tension: 0.1,\n//               borderCapStyle: \"butt\",\n//             },\n//           ],\n//         },\n//         options: {\n//           legend: {\n//             display: false,\n//           },\n//           ...historyOptions,\n//           font: \"25\",\n//           color: \"#fff\",\n//           defaultColor: \"white\",\n//         },\n//       });\n//     }\n//   });\n\n//   const renderPrice = () => {\n//     if (coinData.detail) {\n//       return (\n//         <>\n//           <p className=\"my-0\">${coinData.detail.current_price.toFixed(2)}</p>\n//           <p\n//             className={\n//               coinData.detail.price_change_24h < 0\n//                 ? \"text-danger my-0\"\n//                 : \"text-success my-0\"\n//             }\n//           >\n//             {/* heloosssssssss */}\n//             {coinData.detail.price_change_percentage_24h.toFixed(2)}%\n//           </p>\n//         </>\n//       );\n//     }\n//   };\n//   let internationalNumberFormat = new Intl.NumberFormat(\"en-US\");\n\n//   let currentPrice;\n//   // console.log('coinData.detail', coinData.detail);\n//   if (coinData.detail) {\n//     currentPrice = internationalNumberFormat.format(\n//       coinData.detail.current_price.toFixed(2)\n//     );\n//   } else {\n//     currentPrice = \"undefined\";\n//   }\n\n//   let priceChangePercentage24;\n//   if (coinData.detail) {\n//     priceChangePercentage24 = (\n//       <span\n//         className={\n//           coinData.detail.price_change_24h < 0\n//             ? \"text-danger my-0\"\n//             : \"text-success my-0\"\n//         }\n//       >\n//         {coinData.detail.price_change_percentage_24h.toFixed(2)}%\n//       </span>\n//     );\n//   } else {\n//     priceChangePercentage24 = \"undefined\";\n//   }\n\n//   let hourVolume24;\n//   if (coinData.detail) {\n//     hourVolume24 = internationalNumberFormat.format(\n//       coinData.detail.total_volume\n//     );\n//   } else {\n//     hourVolume24 = \"undefined\";\n//   }\n\n//   let marketCap;\n//   if (coinData.detail) {\n//     marketCap = internationalNumberFormat.format(coinData.detail.market_cap);\n//   } else {\n//     marketCap = \"undefined\";\n//   }\n\n//   let whichGraph;\n//   if (WhichGraphState === \"first\") {\n//     whichGraph = chartRef;\n//   } else if (WhichGraphState === \"second\") {\n//     whichGraph = chartRef2;\n//   }\n\n//   return (\n//     <>\n//       <div className=\"bottomHeader\">\n//         {/* <center>\n//           <img src={graphPhoto} className=\"graphPhoto\" alt=\"graphPhoto\" />\n//         </center> */}\n\n//         <div className=\"row\">\n//           <div className=\"col-6\">\n//             <div className=\"row\" style={{ fontSize: \"13px\" }}>\n//               <div className=\"col-3\">\n//                 <img\n//                   className=\"bottomHeaderLogo\"\n//                   src=\"https://fairtrader.io/wp-content/uploads/2021/08/cropped-favicon-192x192.png\"\n//                   width=\"30px\"\n//                   alt=\"\"\n//                 />\n//               </div>\n//               <div className=\"col-3\">\n//                 <p>\n//                   <span\n//                     className=\"bottomHeaderTxt marginLeft\"\n//                     style={{ color: \"#1dccff\" }}\n//                   >\n//                     <b>Bitcoin</b>\n//                   </span>\n//                   <br />\n//                   <b className=\"bottomHeaderTxt marginLeft\">${currentPrice}</b>\n//                 </p>\n//               </div>\n//               <div className=\"col-3\">\n//                 <p className=\"bottomheaderDrop marginLeftt graphUpDown\">\n//                   <img src={dropdownImg} alt=\"dropdownImg\" />\n//                   <br />\n//                   <b className=\"bottomHeaderTxt\">{priceChangePercentage24}</b>\n//                 </p>\n//               </div>\n//             </div>\n//           </div>\n//           <div className=\"col-6\">\n//             <div className=\"row\" style={{ fontSize: \"13px\" }}>\n//               <div className=\"col-6\">\n//                 <p style={{ float: \"right\" }}>\n//                   <span className=\"colorBlueBold bottomHeaderTxt fontTwelveHeading\">\n//                     24hr<span style={{ color: \"black\" }}>_</span>Volume\n//                   </span>\n//                   <br />\n//                   <span>\n//                     <b className=\"bottomHeaderTxt fontTwelve\">\n//                       ${hourVolume24}\n//                     </b>\n//                   </span>\n//                 </p>\n//               </div>\n//               <div className=\"col-6\">\n//                 <p style={{ float: \"right\" }}>\n//                   <span className=\"colorBlueBold bottomHeaderTxt fontTwelveHeading\">\n//                     Marketcap\n//                   </span>{\" \"}\n//                   <br />\n//                   <span>\n//                     <b className=\"bottomHeaderTxt fontTwelve\">${marketCap}</b>\n//                   </span>\n//                 </p>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//         <p\n//           className=\"text-right\"\n//           style={{\n//             color: \"#18C7C7\",\n//             fontSize: \"14px\",\n//             fontWeight: \"bold\",\n//             marginRight: \"30px\",\n//             zIndex: \"9999\",\n//           }}\n//         >\n//           Select Period:{\" \"}\n//           <span style={{ color: \"black\" }}>\n//             <span className=\"graphFormats\">__</span>\n//           </span>\n//           <span\n//             className=\"graphFormats\"\n//             onClick={() => setTimeFormat(\"24h\")}\n//             style={{ cursor: \"pointer\" }}\n//           >\n//             1D<span style={{ color: \"black\" }}>__</span>\n//           </span>\n//           <span\n//             className=\"graphFormats\"\n//             onClick={() => setTimeFormat(\"7d\")}\n//             style={{ cursor: \"pointer\" }}\n//           >\n//             7D<span style={{ color: \"black\" }}>__</span>\n//           </span>\n//           <span\n//             className=\"graphFormats\"\n//             onClick={() => setTimeFormat(\"1m\")}\n//             style={{ cursor: \"pointer\" }}\n//           >\n//             1M<span style={{ color: \"black\" }}>__</span>\n//           </span>\n//           <span\n//             className=\"graphFormats\"\n//             onClick={() => setTimeFormat(\"1y\")}\n//             style={{ cursor: \"pointer\" }}\n//           >\n//             1Y<span style={{ color: \"black\" }}>___</span>\n//           </span>\n//           <span>\n//             <img onClick={() => setWhichGraphState(\"first\")} src={istGraph} />\n//           </span>\n//           <span style={{ color: \"black\" }}>\n//             <span className=\"graphFormats\">_</span>\n//           </span>\n//           <span>\n//             <img onClick={() => setWhichGraphState(\"second\")} src={secGraph} />\n//           </span>\n//         </p>\n//       </div>\n//       <div\n//         className=\"graph\"\n//         style={{ width: \"90%\", maxWidth: \"90%\", minWidth: \"90%\" }}\n//       >\n//         <div style={{ textAlign: \"center\" }}>\n//           <canvas ref={whichGraph} id=\"myChart\"></canvas>\n//         </div>\n//       </div>\n//     </>\n//   );\n// };\n\n// export default HistoryChart;\n"]},"metadata":{},"sourceType":"module"}